{"version":3,"sources":["components/nav.js","commons/constants.js","pages/Signin.jsx","components/Navbar.jsx","components/DoctorsBySpeciality.jsx","components/Specs.js","pages/Home.jsx","pages/DocSignUp.jsx","pages/AppointmentConfirmation.jsx","pages/BookAppointment.jsx","pages/Welcome.jsx","pages/Settings.js","pages/BloodBank.jsx","pages/ViewPatientAppointments.jsx","pages/ViewDocInfo.jsx","pages/BloodBankSearch.jsx","pages/SideBar.jsx","pages/Signup.jsx","pages/DocSignin.jsx","pages/DoctorAppointments.jsx","pages/ChangeDocPassUsingOld.jsx","pages/DoctorDashboard.jsx","components/ForgotPassword.jsx","App.js","index.js"],"names":["document","addEventListener","event","toggleId","navId","bodyId","headerId","toggle","getElementById","nav","bodypd","headerpd","classList","showNavbar","linkColor","querySelectorAll","colorLink","forEach","l","remove","this","add","url","Signin","setIsAuthorized","useHistory","useState","emailLogin","setemailLogin","passwordLogin","setpasswordLogin","axios","defaults","withCredentials","className","style","textAlign","to","type","class","src","alt","display","marginRight","marginLeft","htmlFor","name","id","placeholder","onChange","e","target","value","onClick","length","Toastify","text","offset","x","y","background","showToast","preventDefault","data","FormData","append","post","then","response","console","log","result","status","localStorage","setItem","JSON","stringify","catch","res","error","marginTop","Navbar","history","getItem","cred","parse","width","height","fontSize","patName","clear","push","role","DoctorsBySpeciality","props","docListBySpec","setdocListBySpec","useEffect","fetchDoctorsBySpecilaity","get","match","params","flexDirection","gap","flexBasis","justifyContent","flexWrap","map","doct","docProfilePic","docName","margin","fontFamily","docFees","docExperience","docIsOnline","backgroundColor","docId","color","Specs","items","title","item","spIcon","spName","spDescription","spId","Home","allSpecs","setAllSpecs","onItem","getDoctors","getAllSpecs","doctor","doctors","flexFlow","DocSignUp","allspecs","setAllSpec","validEmail","RegExp","validPassword","d_name","set_d_name","sp_id","set_sp_id","d_city","set_d_city","d_phone","set_d_phone","d_exp","set_d_exp","d_registeration_no","set_d_registeration_no","d_description","set_d_description","undefined","d_verification_doc","set_d_verification_doc","d_profile_pic","set_d_profile_pic","d_fees","set_d_fees","email","set_email","password","set_password","alert","marginBottom","for","required","selected","index","HtmlFor","rows","cols","classNameName","borderStyle","borderColor","opacity","borderRadius","padding","files","test","Axios","AppointmentConfirmation","doctorDetails","setdoctorDetails","patient","search","useLocation","queryvalues","queryString","getDoctorDetailsById","docid","disabled","sp_name","time","patId","slotid","appdate","BookAppointment","date","setDate","getSlots","setgetSlots","bookedAppointments","setbookedAppointments","visibleSlots","setVisibleSlots","bookSlotIdArray","patientInfo","fetchSlots","bookedApp","slotId","slot","includes","slotTime","Welcome","getOnlineDoctorCount","setgetOnlinedoctorCount","border","paddingTop","Settings","p_desc","setP_desc","patGender","patPhone","patDob","patDescription","put","window","location","cursor","BloodBank","bloodBanks","setbloodBanks","searchQuery","setSearchQuery","getAllBloodBanks","size","bbName","bbCity","bbPhone","bbEmail","ViewPatientAppointments","patientAppointments","setpatientAppointments","getAllAppointments","pid","appId","appDate","ViewDocInfo","fees","setFees","exp","setExp","docdesc","setDocdesc","docCity","setDocCity","docPhone","setDocPhone","profilePic","setProfilePic","marginInline","docRegistrationNo","docDescription","BloodBankSearch","searchedBloodBanks","setSearchedBloodBanks","getSearchedBloodbanks","query","SideBar","authorized","enablePersistence","path","component","Signup","p_name","setP_name","setPassword","setEmail","p_gender","setP_gender","p_phone","setP_phone","p_dob","setP_dob","DocSignin","setIsdrAuthorized","align","DoctorAppointments","getDoctorAppointments","setgetDoctorAppointments","allDoctorAppointments","scope","pname","ChangeDocPassUsingOld","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPass","setConfirmNewPass","DoctorDashboard","href","exact","ForgotPassword","confirmPassword","setConfirmPassword","encOTP","setEncOTP","userOtp","setUserOtp","isOtpSent","setIsOtpSent","body","otp","parseInt","App","isAuthorized","isdrAuthorized","p","d","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b08a077e.chunk.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function(event) {\r\n\r\n    const showNavbar = (toggleId, navId, bodyId, headerId) =>{\r\n    const toggle = document.getElementById(toggleId),\r\n    nav = document.getElementById(navId),\r\n    bodypd = document.getElementById(bodyId),\r\n    headerpd = document.getElementById(headerId)\r\n    \r\n    // Validate that all variables exist\r\n    if(toggle && nav && bodypd && headerpd){\r\n    toggle.addEventListener('click', ()=>{\r\n    // show navbar\r\n    nav.classList.toggle('show')\r\n    // change icon\r\n    toggle.classList.toggle('bx-x')\r\n    // add padding to body\r\n    bodypd.classList.toggle('body-pd')\r\n    // add padding to header\r\n    headerpd.classList.toggle('body-pd')\r\n    })\r\n    }\r\n    }\r\n    \r\n    showNavbar('header-toggle','nav-bar','body-pd','header')\r\n    \r\n    /*===== LINK ACTIVE =====*/\r\n    const linkColor = document.querySelectorAll('.nav_link')\r\n    \r\n    function colorLink(){\r\n    if(linkColor){\r\n    linkColor.forEach(l=> l.classList.remove('active'))\r\n    this.classList.add('active')\r\n    }\r\n    }\r\n    linkColor.forEach(l=> l.addEventListener('click', colorLink))\r\n    \r\n    // Your code to run since DOM is loaded and ready\r\n    });"," export const url = 'http://localhost:8080'\r\n//export const url = 'http://ec2-3-82-241-114.compute-1.amazonaws.com:8080/'\r\n","import React from 'react'\r\nimport './Signin.css'\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { url } from './../commons/constants';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Signin({ setIsAuthorized }) {\r\n    let history = useHistory();\r\n    const [emailLogin, setemailLogin] = useState('')\r\n    const [passwordLogin, setpasswordLogin] = useState('')\r\n\r\n    axios.defaults.withCredentials = false;\r\n    const logIn = (e) => {\r\n        if (emailLogin.length === 0) {\r\n            Toastify({\r\n                text: \"please enter email Id\",\r\n                className: \"info\",\r\n                offset: {\r\n                    x: 600, \r\n                    y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n        }\r\n        \r\n        else if (passwordLogin.length === 0) {\r\n            Toastify({\r\n                text: \"Please enter password\",\r\n                className: \"info\",\r\n                offset: {\r\n                    x: 600, \r\n                    y: 5   // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n           // alert('please enter password')\r\n        } else {\r\n            e.preventDefault()\r\n            const data = new FormData();\r\n\r\n            data.append('email', emailLogin);\r\n            data.append('password', passwordLogin);\r\n            try {\r\n                axios.post(url + '/patient/authenticate', data).then((response) => {\r\n                    // response.setHeader('Access-Control-Allow-Origin', 'http://localhost:8080');\r\n                    console.log(response.data)\r\n                    const result = response.data;\r\n                    console.log(result.data);\r\n                    if (result.status === 'success') {\r\n                        console.log(result.status);\r\n                        console.log(result.data);\r\n                        localStorage.setItem('credentials', JSON.stringify(result.data))\r\n                        setIsAuthorized(true)\r\n\r\n                        Toastify({\r\n                            text: \" Hey! you are Successfully Logged In to Clinic-on-click\",\r\n                            className: \"info\",\r\n                            offset: {\r\n                                    x:500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                    y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                  },\r\n                                style: {\r\n                                      background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                    }\r\n                                  }).showToast();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                       // window.alert('Hey! you are Successfully Logged In to Clinic-on-click');\r\n                        //history.push('/')\r\n                    } else {\r\n                        Toastify({\r\n                            text: \" Registeration Failed..\",\r\n                            className: \"info\",\r\n                            offset: {\r\n                                    x:500, \r\n                                    y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                  },\r\n                                style: {\r\n                                      background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                    }\r\n                                  }).showToast();\r\n                       // window.alert('Registeration Failed..');\r\n\r\n                    }\r\n\r\n                }).catch((res)=>{if(res.data===\"\"){\r\n                    console.log(\"error in response\")\r\n                }else{Toastify({\r\n                    text: \"Invalid Email or Password\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                        x:500, \r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast()}});\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    // //Still needs to work on\r\n    //     useEffect(() => {\r\n    //         Axios.get(`${url}/patient/authenticate`).then((response) => {\r\n    //             if(response.data.loggedIn == true){\r\n    //                 setLoginStatus(response.data[0].email);\r\n    //             }\r\n    //         })\r\n    //     }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/docsignin\">\r\n                                <button type=\"button\" class=\"btn btn-warning\">Goto Doctor's Login</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main_display_image col-sm-3 col-md-9 col-lg-6\">\r\n                        <h1 style={{ textAlign: 'center' }}>\r\n                            Welcome to Clinic-on-click\r\n                        </h1>\r\n                        <h5 style={{ textAlign: 'center' }}>\r\n                            We are always there for you...\r\n                        </h5>\r\n                        <img src=\"\\images\\main_image.jpg\" className=\"img-responsive Hospitalimg\" alt=\"Hospitalimg\" style={{ display: \"block\", marginRight: \"auto\", marginLeft: \"auto\" }} />\r\n                    </div>\r\n\r\n                    <div className=\"main_display_form col-sm-3 col-md-9 col-lg-6 mb-3 py-4\">\r\n\r\n                        <h3 style={{ textAlign: 'center' }}>Login to Clinic-on-click</h3>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your registered email-id'\r\n                                    onChange={(e) => {\r\n                                        setemailLogin(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter your password'\r\n                                    onChange={(e) => {\r\n                                        setpasswordLogin(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={logIn}>Log in</button><br />\r\n                            <Link to='/forgotpassword'>\r\n                                <button type=\"button\" class=\"btn btn-secondary transparent-btn\" >Forgot Password ?</button>\r\n                            </Link>\r\n\r\n                            <h6 style={{ marginTop: '5px' }}>OR</h6>\r\n\r\n                            <Link to=\"/signup\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" onClick={() => { return <Redirect to='/signup' /> }}>Create New Account</button>\r\n                            </Link>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signin;\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Navbar.css';\r\nimport Toastify from 'toastify-js'\r\nimport './nav';\r\nimport { url } from './../commons/constants';\r\n\r\n\r\n\r\n\r\nfunction Navbar({ setIsAuthorized }) {\r\n    // const [sidebar, setSidebar] = useState(false)\r\n    // let history = useHistory();\r\n    const history = useHistory()\r\n\r\n    var x = localStorage.getItem('credentials')\r\n    var cred = JSON.parse(x);\r\n\r\n\r\n    var logout = () => {\r\n\r\n        \r\n            localStorage.clear();\r\n            setIsAuthorized(false);\r\n            history.push('/');\r\n            Toastify({\r\n                text: \" Hey! you are Successfully Logout from  Clinic-on-click\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n       \r\n    \r\n}\r\n    return (\r\n        <>\r\n            <div id=\"body-pd\">\r\n                <header class=\"header\" id=\"header\">\r\n                    {/* <div class=\"header_toggle\"> <i class='bx bx-menu' id=\"header-toggle\"></i> </div> */}\r\n\r\n\r\n                    <Link className=\"navbar-brand\" to=\"/client/welcome\">\r\n                        <img src=\"\\images\\COC.png\" alt=\"\" width=\"120px\" height=\"30\" class=\"d-inline-block align-text-top\" />\r\n\r\n                    </Link>\r\n                    <p style={{ marginLeft: \"auto\", marginRight: \"11px\", marginTop: \"15px\", fontSize: '20px' }}>Hello, {cred.patName}</p>\r\n                    <div class=\"header_img\"> <img src=\"\\images\\person-profile.png\" alt={cred.patName} /> </div>\r\n                </header>\r\n                <div class=\"l-navbar\" id=\"nav-bar\" >\r\n                    <nav class=\"nav\">\r\n                        <div>\r\n                            <Link to=\"/client/home\" class=\"nav_logo\">\r\n                                <i class='bx bx-layer nav_logo-icon'></i>\r\n                                <span class=\"nav_logo-name\"><h4 >COC</h4></span>\r\n                            </Link>\r\n                            <div class=\"nav_list\">\r\n\r\n                                {/* Home is changed to dashboard */}\r\n                                <Link to=\"/client/home\" class=\"nav_link\">\r\n                                    <i class='bx bx-folder nav_icon'></i>\r\n                                    <span class=\"nav_name\">Home</span>\r\n                                </Link>\r\n\r\n                                <Link to=\"/client/speciality\" class=\"nav_link\">\r\n                                    <i class='bx bx-grid-alt nav_icon'></i>\r\n                                    <span class=\"nav_name\">Specialities</span>\r\n                                </Link>\r\n\r\n\r\n                                <Link to=\"/client/blood\" class=\"nav_link\">\r\n                                    <i class='bx bx-donate-blood nav_icon'></i>\r\n                                    <span class=\"nav_name\">Blood Bank</span>\r\n                                </Link>\r\n\r\n                                <Link to=\"/client/patientAppointment\" class=\"nav_link\">\r\n                                    <i class='bx bx-first-aid nav_icon'></i>\r\n                                    <span class=\"nav_name\">Appointments</span>\r\n                                </Link>\r\n\r\n                                <Link to=\"/client/setting\" class=\"nav_link\">\r\n                                    <i class='bx bx-cog nav_icon'></i>\r\n                                    <span class=\"nav_name\">My Profile</span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"nav_link\" onClick={logout} role=\"button\">\r\n                            <i class='bx bx-log-out nav_icon' ></i> <span class=\"nav_name\">Log Out</span>\r\n\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                {/* <div class=\"height-100 bg-light\">\r\n                    <h4>Main Components</h4>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { AiOutlineRadiusSetting } from 'react-icons/ai';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { url } from '../commons/constants';\r\nimport { GoLocation } from 'react-icons/go';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\n\r\nfunction DoctorsBySpeciality(props) {\r\n\r\n    const [docListBySpec, setdocListBySpec] = useState([])\r\n    useEffect(() => {\r\n        fetchDoctorsBySpecilaity();\r\n    }, [])\r\n\r\n\r\n    const fetchDoctorsBySpecilaity = () => {\r\n        // 2 API for Fetching Doctor are \r\n        // * doctorsbyspeciality for only fecting doctors by speciality ID\r\n        // * /doctor/verifieddoctorsbyspeciality/13 for fetching only verfied doctors\r\n\r\n        axios.get(url + '/doctor/verifieddoctorsbyspeciality/' + props.match.params.id).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setdocListBySpec(result.data)\r\n            } else {\r\n                console.log(result.error)\r\n                Toastify({\r\n                    text: \"error occured while getting all doctors\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n              //  alert('error occured while getting all doctors')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <section class=\"main-content\" >\r\n\r\n            <div className=\"container\" style={{ display: \"flex\", flexDirection: \"row\", gap: \"5em\", flexBasis: \"auto\", justifyContent: \"space-evenly\", flexWrap: \"wrap\" }}>\r\n\r\n                {\r\n                    docListBySpec.map((doct) => {\r\n                        return (\r\n                            <>\r\n\r\n                                <div class=\"row\" >\r\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                        <div className=\"card bg-white p-3 mb-3 shadow\" style={{ width: \"500px\", justifyContent: \"space-between\" }}>\r\n                                            <div className=\"d-flex justify-content-between mb-4\">\r\n                                                <div className=\"user-info\">\r\n\r\n                                                    <div className=\"user-info__basic\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                                        <div className=\"user-info__img\">\r\n                                                            <img src={url + '/' + doct.docProfilePic} alt={doct.docName} />\r\n                                                        </div>\r\n                                                        <h5 className=\"mb-0\" style={{ margin: \"auto\", marginTop: \"10px\", fontSize: \"1.8rem\", fontFamily: \"poppins\" }}>Dr. {doct.docName}</h5>\r\n                                                        <img src=\"\\images\\verified.png\" style={{ width: \"20%\", height: \"auto\" , marginRight:\"10px\"}} />\r\n                                                        {/* <div className=\"d-flex justify-content-between mt-4\"> */}\r\n                                                        {/*                                                         \r\n                                                            {\r\n                                                                doct.docIsOnline ? <span class=\"badge bg-success\">Online</span> : <span class=\"badge bg-secondary\">Offline</span>\r\n                                                            } */}\r\n\r\n                                                        {/* </div> */}\r\n                                                        {/* <p className=\"text-muted mb-0\">Experience: {doct.docExperience} years</p> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"dropdown open\">\r\n                                                    <a href=\"#!\" className=\"px-2\" id=\"triggerId1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                        <i className=\"fa fa-ellipsis-v\"></i>\r\n                                                    </a>\r\n\r\n                                                </div> */}\r\n                                            </div>\r\n\r\n                                            {/* <h6 className=\"mb-0\" style={{ fontFamily: \"poppins\", fontSize: \"1.0rem\" }}>Contact : {doct.docPhone}</h6> */}\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n\r\n                                                <small className=\"ml-1\" style={{ fontFamily: \"poppins\", fontSize: \"1.0rem\" }}>Fees: ₹{doct.docFees}</small>\r\n\r\n                                                <p className=\"text-muted mb-0\" style={{ fontFamily: \"poppins\", fontSize: \"1.0rem\" }}>Experience: {doct.docExperience} years</p>\r\n\r\n                                            </div>\r\n                                            {/* <a href=\"#!\"><small>Contact</small></a> */}\r\n                                            <div className=\"d-flex justify-content-between mt-4\">\r\n                                                {\r\n                                                    doct.docIsOnline ? <span class=\"badge bg-success\">Online</span> : <span class=\"badge bg-secondary\">Offline</span>\r\n\r\n\r\n                                                }\r\n\r\n\r\n                                                <div>\r\n\r\n                                                    {/* <small className=\"ml-1\">Fees: ₹{doct.docFees}</small> */}\r\n\r\n                                                </div>\r\n                                                <br />\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"btn\" style={{ textAlign: \"center\", backgroundColor: \"#f2ffcc\", marginTop: \"20px\", width: \"100%\" }}>\r\n                                                <Link to={`/client/appointment/${doct.docId}`} className=\" font-weight-bold\" style={{ color: \"#33cc33\" }}> Book Appointment</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </>)\r\n                    })}\r\n\r\n            </div >\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DoctorsBySpeciality\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { url } from './../commons/constants';\r\nimport axios from 'axios';\r\nimport DoctorsBySpeciality from './DoctorsBySpeciality';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Specs({ items, title }) {\r\n  var history = useHistory()\r\n  // const [docList, setDocList] = useState('');\r\n  console.log(items);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title\" style={{ width: \"100%\" }}><h1>{title}</h1></div>\r\n\r\n      {items.map((item) => {\r\n      \r\n        return (\r\n\r\n          <>\r\n            <br />\r\n            <div className=\"card\" style={{ width: \"18rem\", marginLeft: \"18px\", marginTop: \"18px\" }}>\r\n              <img src={url + '/' + item.spIcon} alt=\"Card image cap\" style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", height: \"150px\", width: \"150px\" }} />\r\n\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\" style={{ textAlign: \"center\" }}> {item.spName} </h5>\r\n                <p className=\"card-text\" style={{ textAlign: \"center\" }}>{item.spDescription}</p>\r\n                {/* \r\n                <Link to={{pathname: \"/docBySpec  \" , state:item.spId }} ><button className=\"btn btn-primary\" style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>Show Doctors</button> </Link>\r\n                */}\r\n\r\n                <Link to={`/client/docBySpec/${item.spId}`} ><button className=\"btn btn-primary\" style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>Show Doctors</button> </Link>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Specs\r\n","import React from 'react'\r\n\r\nimport {useState, useEffect} from 'react'\r\nimport {url} from '../commons/constants';\r\nimport axios from 'axios';\r\nimport Specs from '../components/Specs';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction Home() {\r\n    \r\n\r\n        // const [spec_id, setSpecId] = useState('')\r\n        // const [spec_name, setSpecName] = useState('')\r\n        // const [spec_description, setSpecDesc] = useState('')\r\n        // const [sec_icon , setSpecIcon] = useState('')\r\n       \r\n        const [allSpecs, setAllSpecs] = useState([])\r\n        const [onItem, selectItem] = useState([])\r\n        const history = useHistory()\r\n\r\n        useEffect(() => {\r\n          getDoctors();\r\n          getAllSpecs();\r\n          \r\n        }, []);\r\n    \r\n        const getDoctors = (doctor) =>{\r\n            axios.get(url + '/patient/speciality/' + doctor).then((response) => {\r\n                const result = response.data\r\n                console.log(\"Result from data\" + result.data);\r\n                console.log(\"doctor data \"+doctor);\r\n                if(result.status === 'success') {\r\n                    history.push('/docBySpec' , {\r\n                        doctors: result.data,\r\n                    })\r\n                } else {\r\n                  console.log(result.error)\r\n                  Toastify({\r\n                    text: \"error occured while getting all doctors\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n\r\n                 // alert('error occured while getting all doctors')\r\n                }\r\n            }) \r\n        }\r\n        \r\n        //Have to change URI to /speciality\r\n        const getAllSpecs = () => { //Functionality of Admin/Patient\r\n          // send the GET request\r\n          axios.get(url + '/patient/speciality').then((response) => {\r\n            const result = response.data\r\n            console.log(\"Response Data from specialities \"+ result.status);\r\n            if (result.status === 'success') {\r\n              setAllSpecs(result.data)\r\n            } else {\r\n              Toastify({\r\n                text: \"error occured while getting all Specialities\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n             // alert('error occured while getting all Specialities')\r\n            }\r\n          })\r\n        }\r\n\r\n        \r\n    \r\n        console.log(onItem);\r\n         // console.log(\"Response Data from specialities \"+ result.data);\r\n          // if (result.status === 'success') {\r\n          //   setAllSpecs(result.data)\r\n          // } else {\r\n          //   alert('error occured while getting all Specialities')\r\n          // }\r\n   \r\n\r\nconsole.log(allSpecs)\r\n    return (\r\n        <div className=\"/\">\r\n            {/* <h1>Home</h1>\r\n            <button className=\"btn btn-success\" onClick={getAllSpecs}> GetAllSpecs</button> */}\r\n\r\n            <div className=\"container\" style={{display:\"flex\" , flexDirection:\"row\" , flexFlow:\"wrap\"}} >\r\n                <Specs items={allSpecs} title=\" All Specialities\"  />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n// import { Stepper , Step } from 'react-form-stepper';\r\nimport Axios from 'axios';\r\nimport axios from 'axios';\r\nimport { url } from './../commons/constants';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\nfunction DocSignUp() {\r\n\r\n    //For Speciality Drop Down list\r\n    const [allspecs , setAllSpec] = useState([])\r\n    let history = useHistory()\r\n\r\n    const validEmail = new RegExp(\r\n        '.+\\@.+\\..+'\r\n     );\r\n\r\n        const validPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\r\n\r\n    const [d_name, set_d_name] = useState('')\r\n    const [sp_id, set_sp_id] = useState(0)\r\n    const [d_city, set_d_city] = useState('')\r\n    const [d_phone, set_d_phone] = useState('')\r\n    const [d_exp, set_d_exp] = useState(0)\r\n    const [d_registeration_no, set_d_registeration_no] = useState('')\r\n    const [d_description, set_d_description] = useState('')\r\n    const [d_verification_doc, set_d_verification_doc] = useState(undefined)\r\n    const [d_profile_pic, set_d_profile_pic] = useState(undefined)\r\n    const [d_fees, set_d_fees] = useState(0.0)\r\n    const [email, set_email] = useState('')\r\n    const [password, set_password] = useState('')\r\n\r\n    useEffect(() => {\r\n        getAllSpecs();\r\n    }, [])\r\n\r\n        const getAllSpecs = () =>{\r\n            axios.get(url + '/doctor/findSpecialities').then((response) => {\r\n                const result = response.data;\r\n                if (result.status === 'success') {\r\n                    console.log(result.data)\r\n                    setAllSpec(result.data)\r\n                } else {\r\n                    alert(\"Error fetching in Specialities Data...!!!\")\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n    // Axios.defaults.withCredentials = true\r\n    const docRegister = (e) => {\r\n        if (d_name.length === 0) {\r\n            Toastify({\r\n                text: \" please enter Name\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            // alert('please enter Name')\r\n          } \r\n          else if (sp_id === 0) {\r\n            Toastify({\r\n                text: \" please select Speciality\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            // alert('please select Speciality')\r\n          } \r\n          else if (d_city.length === 0) {\r\n            Toastify({\r\n                text: \" please enter City\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('please enter City')\r\n          } \r\n          else if (d_phone.length !== 10) {\r\n            Toastify({\r\n                text: \"phone number should be of 10 digits\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            //alert('phone number should be of 10 digits')\r\n          } \r\n          else if (d_exp === 0) {\r\n            Toastify({\r\n                text: \"please enter Experience (in years)\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            //alert('please enter Experience (in years)')\r\n          } \r\n          else if (d_registeration_no.length === 0) {\r\n            Toastify({\r\n                text: \"please enter Registration number\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            //alert('please enter Registration number')\r\n          } \r\n          else if (d_verification_doc === undefined) {\r\n            Toastify({\r\n                text: \"please upload verification document\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('please upload verification document')\r\n          } \r\n          else if (d_profile_pic === undefined) {\r\n            Toastify({\r\n                text: \"please upload profile pic\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            //alert('please upload profile pic')\r\n          } \r\n          else if (d_fees.length === 0) {\r\n            Toastify({\r\n                text: \"please enter fees\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            \r\n            //alert('please enter fees')\r\n          } \r\n          else if (email.length === 0) {\r\n            Toastify({\r\n                text: \"Email field cannot be empty\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           \r\n            // alert('Email field cannot be empty')\r\n          } else if (!validEmail.test(email)){\r\n           \r\n            Toastify({\r\n                text: \"Please Enter a valid Email\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast(); //   alert('Please Enter a valid Email')\r\n          }\r\n          else if (password.length === 0) {\r\n            Toastify({\r\n                text: \"Password Field cannot be Empty.\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n            //alert('Password Field cannot be Empty.')\r\n          } else if(!validPassword.test(password)){\r\n            Toastify({\r\n                text: \"password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space.\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n              //alert(' password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space')\r\n          }\r\n          \r\n          else {\r\n                e.preventDefault()\r\n                const data = new FormData();\r\n\r\n                data.append('docName', d_name);\r\n                data.append('spId', sp_id);\r\n                data.append('docCity', d_city);\r\n                data.append('docPhone', d_phone);\r\n                data.append('docExperience', d_exp);\r\n                data.append('docRegistrationNo', d_registeration_no);\r\n                data.append('docDescription', d_description);\r\n                data.append('docVerificationDoc', d_verification_doc);\r\n                data.append('docProfilePic', d_profile_pic);\r\n                data.append('docFees', d_fees);\r\n                data.append('email', email);\r\n                data.append('password', password);\r\n\r\n          \r\n                // Chnages to be made for FormData from JSON Data\r\n                try {\r\n                    Axios.post(url+'/doctor', data).then((response) => {\r\n                        const result = response.data;\r\n                        if(result.status == \"success\"){\r\n                            // console.log(response.status);\r\n                            // console.log(response.data);\r\n\r\n                            Toastify({\r\n                              text: \" YOU ARE SUCCESSFULLY REGISTERED AS DOCTOR AT Clinic-on-click!\",\r\n                              className: \"info\",\r\n                              offset: {\r\n                                      x:600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                      y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                    },\r\n                                  style: {\r\n                                        background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                      }\r\n                                    }).showToast();\r\n\r\n                            // window.alert('YOU ARE SUCCESSFULLY REGISTERED AS DOCTOR AT  Clinic-on-click!');\r\n\r\n\r\n                        }\r\n                    })\r\n                    \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n    }\r\n    } \r\n\r\n    return (\r\n        <div >\r\n            <div className=\"container my-3\" style={{ textAlign: \"center\" }}>\r\n            <div style={{ textAlign: 'right' , marginBottom:\"10px\"}}>\r\n                            <Link to=\"/docsignin\">\r\n                            <button type=\"button\" class=\"btn btn-warning\">Go Back to Login</button>\r\n                            </Link>\r\n                        </div>     \r\n                <h1>Doctor Sign Up Form</h1>\r\n                {/* <Stepper\r\n                    steps={[{ label: 'Step 1' }, { label: 'Step 2' }, { label: 'Step 3' }]}\r\n                    activeStep={1}\r\n                /> */}\r\n                <form>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col\">\r\n                            <label for=\"d_name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter your Name\" required=\"required\" aria-label=\"First name\"\r\n                                onChange={(e) => {\r\n                                    set_d_name(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label for=\"inputState\" className=\"form-label\">Choose your Speciality</label>\r\n                            <select className=\"form-control\" aria-label=\".form-select-sm example\" onChange={(e) => {\r\n                                    set_sp_id(e.target.value)\r\n                                }}>\r\n                                <option selected>Choose your Speciality</option>\r\n                                {allspecs.map((item, index) => {\r\n                                     return (\r\n                                        <option key={index} value={item.spId}>{item.spName}</option>\r\n                                 )})\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputEmail4\" className=\"form-label\">Registeration No</label>\r\n                            <input type=\"text\" className=\"form-control\" required=\"required\" placeholder=\"Enter doctor registration number\" onChange={(e) => {\r\n                                set_d_registeration_no(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputCity\" className=\"form-label\">Experience</label>\r\n                            <input type=\"number\" className=\"form-control\" placeholder=\"Experience (in years)\" onChange={(e) => {\r\n                                set_d_exp(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Phone</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Phone number\" required=\"required\"\r\n                                onChange={(e) => {\r\n                                    set_d_phone(e.target.value)\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputCity\" className=\"form-label\">City</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter city\" onChange={(e) => {\r\n                                set_d_city(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Fees</label>\r\n                            <input type=\"number\" className=\"form-control\" required=\"required\" placeholder=\"Enter Fees\" onChange={(e) => {\r\n                                set_d_fees(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" cols=\"55\" placeholder=\"Enter some description about doctor\" onChange={(e) => {\r\n                                set_d_description(e.target.value)\r\n                            }}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" required=\"required\" placeholder=\"Enter doctor's email\" onChange={(e) => {\r\n                                set_email(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputPassword4\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter new password\" required=\"required\" onChange={(e) => {\r\n                                set_password(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div classNameName=\"row\" style={{ borderStyle: \"groove\", borderColor: \"#CED4DA\", opacity: \"0.5\", borderRadius: \"5px\", padding: \"10px\" }}>\r\n                                <label HtmlFor=\"inputEmail4\" className=\"form-label\">Upload Profile Pic-size must be less than 1MB</label>\r\n                                {/* <label for=\"exampleFormControlFile1\">Example file input</label> */}\r\n                                \r\n                                <input type=\"file\" className=\"form-control-file\" onChange={(e) => {\r\n                                    set_d_profile_pic(e.target.files[0])\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"row\" style={{ borderStyle: \"groove\", borderColor: \"#CED4DA\", opacity: \"0.5\", borderRadius: \"5px\", padding: \"10px\" }}>\r\n                                <label HtmlFor=\"inputEmail4\" className=\"form-label\">Upload Verification Doc</label>\r\n                                {/* <label for=\"exampleFormControlFile1\">Example file input</label> */}\r\n                                <input type=\"file\" className=\"form-control-file\" required=\"required\"\r\n                                    onChange={(e) => {\r\n                                        set_d_verification_doc(e.target.files[0])\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <br /> <br />\r\n                        <div className=\"col-12\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={docRegister}>Register at Clinic-on-click</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DocSignUp\r\n","import React from 'react'\r\nimport './AppointmentConfirmation.css'\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport { url } from '../commons/constants';\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction AppointmentConfirmation(props) {\r\n\r\n    const [doctorDetails, setdoctorDetails] = useState([]);\r\n    var history = useHistory();\r\n\r\n    var data = localStorage.getItem('credentials');\r\n    var patient = JSON.parse(data);\r\n    const { search } = useLocation()\r\n    const queryvalues = queryString.parse(search)\r\n\r\n    useEffect(() => {\r\n        getDoctorDetailsById();\r\n    }, [])\r\n\r\n    const getDoctorDetailsById = () => {\r\n\r\n        axios.get(url + '/doctor/' + queryvalues.docid).then((response) => {\r\n            const result = response.data;\r\n            console.log(result.data);\r\n            if (result.status === 'success') {\r\n                setdoctorDetails(result.data)\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error fetching in Doctor's Data...!!!\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n               // alert(\"Error fetching in Doctor's Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const proceedToPayment = (e) => {\r\n        e.preventDefault()\r\n        const data = new FormData();\r\n\r\n        data.append('pId', patient.patId);\r\n        data.append('docId', queryvalues.docid);\r\n        data.append('slotId', queryvalues.slotid);\r\n        data.append('appDate', queryvalues.appdate);\r\n\r\n        axios.post(url + '/patient/appointment', data).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === \"success\") {\r\n                console.log(response.status);\r\n                console.log(response.data);\r\n                Toastify({\r\n                    text: \"Appointment Booked SuccessFully !!!\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                            }\r\n                          }).showToast();\r\n\r\n\r\n               // window.alert('Appointment Booked SuccessFully !!!')\r\n                history.push('/client/patientAppointment')\r\n            } else {\r\n                Toastify({\r\n                    text: \"appointment booking failed\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n                //window.alert('appointment booking failed')\r\n            }\r\n        })\r\n    }\r\n        return (\r\n            <div>\r\n                <div className=\"thankyou-page\">\r\n                    <div className=\"_header\">\r\n                        <div className=\"logo\">\r\n                            <img src=\"https://codexcourier.com/images/banner-logo.png\" alt=\"\" />\r\n                        </div>\r\n                        <h1>Confirm Your Appointment!!</h1>\r\n                    </div>\r\n                    <div className=\"_body\">\r\n                        <div className=\"_box\">\r\n\r\n                            <div className=\"input-group  mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Patient Name</span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" value={patient.patName} disabled />\r\n                            </div>\r\n\r\n                            <div className=\"input-group  mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Doctor Name</span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" value={'Dr. '+doctorDetails.docName} disabled />\r\n                            </div>\r\n\r\n                            <div className=\"input-group  mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Speciality</span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" value={doctorDetails.sp_name} disabled />\r\n                            </div>\r\n\r\n                            <div className=\"input-group  mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Fees</span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" value={doctorDetails.docFees} disabled />\r\n                            </div>\r\n\r\n                            <div className=\"input-group  mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Slot Time</span>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" value={queryvalues.time} disabled />\r\n                            </div>\r\n                            <div className=\"_footer\">\r\n                                <button type=\"submit\" className=\"btn btn-success\" onClick={proceedToPayment}>Confirm Appointment</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    export default AppointmentConfirmation","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useState, useEffect} from 'react'\r\nimport {url} from '../commons/constants';\r\nimport {Link} from 'react-router-dom';\r\nimport AppointmentConfirmation from './AppointmentConfirmation';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\n\r\nfunction BookAppointment(props) {\r\n    const [date, setDate] = useState('');\r\n    const [getSlots, setgetSlots] = useState([])\r\n    const [bookedAppointments, setbookedAppointments] = useState([])\r\n    const [visibleSlots, setVisibleSlots] = useState(false);\r\n    var bookSlotIdArray = [];\r\n\r\n    var patientInfo = localStorage.getItem('credentials')\r\n    var pat = JSON.parse(patientInfo)\r\n    // Console for Checking\r\n    // Console.log(patientInfo)\r\n\r\n    useEffect(() => {\r\n        fetchSlots();\r\n    }, [])\r\n\r\n\r\n    const fetchSlotsByDocId = () => {\r\n        let data = new FormData()\r\n        console.log(date);\r\n        console.log(props.match.params.id);\r\n        data.append('docId', props.match.params.id)\r\n        data.append('appdate', date)\r\n\r\n        axios.post(url + '/patient/fetchappointmentsbydoctoranddate', data).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setbookedAppointments(result.data)\r\n                setVisibleSlots(true)\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error fetching Doctor's slot Data...!!!\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                    },\r\n                    style: {\r\n                        background: \"linear-gradient(to right, #FF0000, #FF0000)\"\r\n                    }\r\n                }).showToast();\r\n                // alert(\"Error fetching Doctor's slot Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const fetchSlots = () => {\r\n        axios.get(url + '/patient/getallslots').then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setgetSlots(result.data)\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error fetching All Slot Data !!\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                    },\r\n                    style: {\r\n                        background: \"linear-gradient(to right, #FF0000, #FF0000)\"\r\n                    }\r\n                }).showToast();\r\n                // alert(\"Error fetching All Slot Data !!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    bookedAppointments.map((bookedApp) => {\r\n        bookSlotIdArray.push(bookedApp.slotId);\r\n\r\n    })\r\n    // for (var bookedslot of bookedSlots) {\r\n    // bookSlotIdArray.push(bookedslot.slotId);\r\n    // }\r\n\r\n    console.log(\"array -> booked slots of date: \" + bookSlotIdArray);\r\n    return (\r\n        <>\r\n            <h1>Book an Appointment</h1>\r\n            <div className=\"row mb-3\">\r\n                <label htmlFor=\"dob\" className=\"col-xs-4 col-sm-4 col-form-label\"\r\n                    style={\r\n                        {fontSize: '20px'}\r\n                }>Select Date to check available slots:</label>\r\n                <div class=\"col-xs-8 col-sm-8\">\r\n                    <input type=\"date\" name=\"dob\" className=\"form-control\" id=\"dob\"\r\n                        onChange={\r\n                            (e) => {\r\n                                setDate(e.target.value);\r\n                            }\r\n                        }/>\r\n                    <br/>\r\n                    <button className=\"btn btn-sm btn-warning\"\r\n                        onClick={fetchSlotsByDocId}>Check available slots</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron\">\r\n                {\r\n                !visibleSlots && <div class=\"container\">\r\n                    <h3>No Date selected !\r\n                    </h3>\r\n                    <h5>Select a date to check available slots</h5>\r\n\r\n                </div>\r\n            }\r\n                {\r\n                visibleSlots && <div className=\"col-md-12\">\r\n                    <p style={\r\n                        {\r\n                            fontSize: '20px',\r\n                            fontFamily: 'poppins'\r\n                        }\r\n                    }>Selected Date : {date}</p>\r\n                    <div className=\"row\"\r\n                        style={\r\n                            {gap: \"10px\"}\r\n                    }>\r\n                        {\r\n                        getSlots.map((slot) => {\r\n                            return(bookSlotIdArray.includes(slot.slotId) ? <button type=\"button\" class=\"btn btn-outline-danger\" disabled>\r\n                                {\r\n                                slot.slotTime\r\n                            }</button> : <Link to ={`/client/confirm?time=${slot.slotTime}&slotid=${slot.slotId}&docid=${props.match.params.id}&appdate=${date}`}>\r\n                                <button type=\"button\" class=\"btn btn-outline-success\">\r\n                                    {\r\n                                    slot.slotTime\r\n                                }</button>\r\n                            </Link>\r\n\r\n                            // bookSlotIdArray.includes(slot.slotId)?<button type=\"button\" class=\"btn btn-outline-danger\" disabled >{slot.slotTime}</button>:<button type=\"button\" class=\"btn btn-outline-success\" onClick={()=>{\r\n                            // return (\r\n                            //     <AppointmentConfirmation slotid={slot.slotId} slottime={slot.slotTime} docid={props.match.params.id}/>\r\n                            // )\r\n                            // }} >{slot.slotTime}</button>\r\n                            )\r\n                        })\r\n                    } </div>\r\n                </div>\r\n            } </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookAppointment\r\n","import React from \"react\";\r\nimport \"./Welcome.css\";\r\nimport { useState, useEffect } from 'react'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { url } from '../commons/constants';\r\nimport  axios  from 'axios';\r\n\r\nfunction Welcome() {\r\n\r\n  \r\n  const [getOnlineDoctorCount, setgetOnlinedoctorCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    axios.get(url + 'patient/countonlinedoctors').then((response)=>{\r\n      if(response.data.status === 'success' )\r\n        setgetOnlinedoctorCount(response.data.data);\r\n    })\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ marginTop: \"80px\", borderRadius: \"10px\", border: \"none\"}}>\r\n          {/* <h5 className=\"card-header\">Featured</h5> */}\r\n          <div\r\n            className=\"card-body\"\r\n            style={{\r\n              height: \"100%\",\r\n              borderRadius: \"10px\",\r\n              backgroundColor: \"rgb(209, 248, 238)\",\r\n            }}\r\n          >\r\n            <h1\r\n              className=\"card-title\"\r\n              style={{ textAlign: \"center\", color: \"rgb(1, 59, 45)\"  ,paddingTop:'25px' }}\r\n            >\r\n              Clinic-on-click (online doctor booking appointment sytem)\r\n            </h1>\r\n            <h5\r\n              className=\"card-title\"\r\n              style={{ textAlign: \"center\", color: \"rgb(1, 59, 45)\" }}\r\n            >\r\n              Your well Being is Our Priority\r\n            </h5>\r\n            <hr />\r\n            <div>\r\n              <b>Online Doctor Consultation</b>\r\n            </div>\r\n            <p className=\"para1\">\r\n            Experienced and verified doctors from every possible specialty\r\n            on-board, Clinic-on-click empowers patients to consult with\r\n            doctors from the comfort and safety\r\n            of their homes. Online doctor consultation is done via video\r\n            conferencing, telephonic conversations or online chats.\r\n            </p>\r\n            <p>\r\n              <div className=\"onlineDoc\" style={{display:\"flex\", flexDirection:\"row\" , justifyContent:\"center\"}}>\r\n                <img src=\"\\images\\online.png\" style={{ width: \"20px\", height: \"20px\" , marginRight:\"10px\" , borderRadius:\"50px\"}}/> {getOnlineDoctorCount} Doctors Online\r\n              </div>\r\n            </p>\r\n            <Link to=\"/home\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  return <Redirect to=\"/signin\" />;\r\n                }}\r\n              >\r\n                Consult Now\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n          <div className=\"col\" style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://i0.wp.com/psychonephrology.com/wp-content/uploads/2019/01/helathy-patient-doctor-relationship-psychonephrology.jpg?fit=5184%2C3456&ssl=1\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Consult Now</h5>\r\n                <p className=\"card-text\">\r\n                  Online Doctor Patient Consultancy with all Specialities. Tell\r\n                  us About Your Concern We will help you find best doctors.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://publishing.haus/wp-content/uploads/2019/01/03_20_17_Why-the-Doctor-Patient-Relationship-is-Important-1200x800.jpeg\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Don't wait!</h5>\r\n                <p className=\"card-text\">\r\n                  Skip the waiting room. Consult with a doctor online\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://cdn11.bigcommerce.com/s-f6g6z1clyo/product_images/uploaded_images/creating-a-positive-doctor-patient-relationship.jpg\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Hurry Up!</h5>\r\n                <p className=\"card-text\">\r\n                  Get your Kid Vaccinated on time to protect them against major\r\n                  Diseases.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://www.advancedurologyinstitute.com/wp-content/uploads/2016/02/doctor-patient-relationship-1.jpg\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Health Tip!</h5>\r\n                <p className=\"card-text\">\r\n                  Control your Sugar Level, and monitor your Health\r\n                  regularly...\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://elsonhaasmd.com/wp-content/uploads/2017/05/DPR-color-radial-3.png\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Must Do!</h5>\r\n                <p className=\"card-text\">\r\n                  Regular checkups Reduces your chances of getting ill.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"style={{\r\n               marginTop: '15px',\r\n            }}>\r\n            <div className=\"card h-100\">\r\n              <img\r\n                src=\"https://i.cbc.ca/1.4389279.1532115488!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_780/doctor-with-patient.jpg\"\r\n                className=\"card-img-top\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Health Tip!</h5>\r\n                <p className=\"card-text\">\r\n                  PCOD can only be controlled by lifestyle management.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n            className=\"card-body\"\r\n            style={{\r\n               marginTop: '25px',\r\n               marginBottom: '25px',\r\n              height: \"100%\",\r\n              borderRadius: \"10px\",\r\n              backgroundColor: \"rgb(209, 248, 238)\",\r\n            }}\r\n          >\r\n            <h4\r\n              className=\"card-title\"\r\n              style={{ textAlign: \"center\", color: \"rgb(1, 59, 45)\",padding:'10px' }}\r\n            >\r\n              About Us\r\n            </h4>\r\n            <hr />\r\n            <div>\r\n              <b>Who we are?</b>\r\n            </div>\r\n            <p className=\"para1\">\r\n              We are digital healthcare platform with the core belief that\r\n              ‘Expertise is for Everyone’. We combine Clinic-on-click’s legacy of\r\n              clinical excellence, affordable cost, and forward-looking research\r\n              with cutting-edge technology to make the best quality healthcare\r\n              easily accessible to every Indian, online.\r\n            </p>\r\n            <div>\r\n              <b>What we do?</b>\r\n            </div>\r\n            <p className=\"para1\">\r\n              With the launch of Clinic-on-click, On a single online platform, you can\r\n              avail an entire gamut of services, like online doctor\r\n              consultation. We also offer expert-curated solutions for\r\n              COVID-care and chronic condition management.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <div className=\"card-body text-dark bg-light mb-3\">\r\n          Clinic-on-click  project is created by IACSD-Akurdi PG-DAC Mar-22 batch students :\r\n            Anubhav Pareek,Anurag Tiwaskar\r\n            <br />Note that Clinic-on-click project is solely for educational purpose. It doesnot serve any commercial purpose.\r\n            <br />\r\n             contact us at email:\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react'\r\nimport Axios from 'axios'\r\nimport {useState} from 'react'\r\nimport {url} from '../commons/constants';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction Settings() {\r\n\r\n    \r\n    const [p_desc, setP_desc] = useState('');\r\n    \r\n    var data = localStorage.getItem('credentials')\r\n    var patient = JSON.parse(data);\r\n\r\n    const patientSignup = (e) =>{\r\n        e.preventDefault()\r\n        const data = new FormData();\r\n        data.append('patDesc', p_desc);\r\n        try {\r\n            Axios.put(url+'/patient/updatedesc/'+ patient.patId , data).then((response) => {\r\n                const result = response.data;\r\n                if(result.status == \"success\"){\r\n                    console.log(response.status);\r\n                    console.log(response.data);\r\n                    window.location = '/client/home';\r\n                    Toastify({\r\n                        text: \"Data Updated Successfully\",\r\n                        className: \"info\",\r\n                        offset: {\r\n                                x: 400, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                y:100  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                              },\r\n                            style: {\r\n                                  background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                }\r\n                              }).showToast();\r\n\r\n\r\n\r\n\r\n                    //window.alert('Data Updated Successfully . . .');\r\n                }\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"settings\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                   \r\n\r\n                    <div className=\"col-sm-3 col-md-9 col-lg-6\">\r\n                        <h1 style={{ textAlign: 'center' }}>Patient Profile</h1>\r\n\r\n                        <br />\r\n                        \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"name\" className=\"col-sm-3 col-form-label\">Full Name </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\" placeholder='Enter your full name' value={`${patient.patName}`} disabled/>\r\n                            </div>\r\n                        </div> \r\n\r\n\r\n                        <div className=\"row mb-3\" >\r\n                            <legend className=\"col-form-label col-sm-3 pt-0\">Gender</legend>\r\n                            <div class=\"col-sm-9\">\r\n                            <input type=\"text\"  className=\"form-control\" value={`${patient.patGender}`} disabled/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"phone\" className=\"col-sm-3 col-form-label\">Phone </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"text\" name=\"phone\" className=\"form-control\" id=\"phone\" value={patient.patPhone} disabled/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-3 col-form-label\">Email</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your email-id' value={`${patient.email}`} disabled\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"row mb-3\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\">Password</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter new password'\r\n                                 />\r\n                            </div>\r\n                        </div> */}\r\n\r\n                     \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"dob\" className=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"text\" name=\"dob\" className=\"form-control\"  value={patient.patDob} disabled/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"desc\" className=\"col-sm-3 col-form-label\">Description</label>\r\n                            <div class=\"col-sm-9\">\r\n                            <textarea className=\"form-control\" id=\"desc\" rows=\"3\" placeholder={'Click to edit your existing description: \\n'+patient.patDescription}  onChange={(e)=>{\r\n                                setP_desc(e.target.value)\r\n                            }} ></textarea>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" class=\"btn btn-success col-12\" onClick={patientSignup} style={{cursor:\"pointer\"}}>Update Description</button>\r\n                                    \r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { url } from '../commons/constants';\r\nimport { useState, useEffect } from 'react';\r\nimport { AiFillBank, AiFillMail } from \"react-icons/ai\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { IoMdCall } from \"react-icons/io\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\nfunction BloodBank() {\r\n\r\n    const [bloodBanks, setbloodBanks] = useState([])\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    useEffect(() => {\r\n        getAllBloodBanks();\r\n    }, [])\r\n\r\n\r\n    const getAllBloodBanks = () => {\r\n        axios.get(url + '/bloodbank').then((response) => {\r\n            const result = response.data;\r\n            console.log(result.data)\r\n            if (result.status === 'success') {\r\n                setbloodBanks(result.data);\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error Fetching Blood Bank Data ....\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n                // window.alert(\"Error Fetching Blood Bank Data ....\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n               <h1>Blood Banks</h1>\r\n\r\n               <div className=\"four-fifths column \">\r\n                        <div className=\"row d-flex justify-content-center mt-50\">\r\n                            <div className=\"col-md-5\">\r\n                                <form className=\"flex-nowrap col ml-auto footer-subscribe p-0\" style={{display:'flex'}}>\r\n                                    <input\r\n                                        type=\"search\"\r\n                                        onChange={(e) => {\r\n                                            setSearchQuery(e.target.value);\r\n                                        }}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Search Bloodbanks by City\"\r\n                                        style={{height:'43px'}}\r\n                                    />\r\n                                    <Link to ={`/bloodsearchresults?query=${searchQuery}`}>\r\n                                    <button className=\"btn btn-dark btn-sm\" style={{marginLeft:'5px'}}>\r\n                                        <FaSearch />\r\n                                    </button></Link>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            {bloodBanks.map((item) => {\r\n                return (\r\n                    <>\r\n                        \r\n                        <div className=\" bg-light\">\r\n                         \r\n                            <div class=\"container-fluid\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"row\" style={{ backgroundColor: \"rgb(206, 245, 234)\", margin: \"10px\", padding: \"5px\", borderRadius: \"10px\" }}>\r\n                                       \r\n                                            <div class=\"col-md-10  \">\r\n\r\n                                                <h3 style={{ marginTop: \"10px\" }}>\r\n                                                    <span style={{margin:'1px'}}><AiFillBank size={50}/></span>\r\n                                                   {item.bbName}\r\n                                                </h3>\r\n                                                <p style={{ marginLeft: \"-2px\" }}>\r\n                                                    <span><GoLocation /></span>\r\n                                                        {item.bbCity}\r\n                                                    </p>\r\n                                                <span><p><IoMdCall />{item.bbPhone}</p>  <p><AiFillMail /> {item.bbEmail}</p></span>\r\n                                                {/* <button className=\"btn btn-primary\">Select</button> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n            }\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BloodBank\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { url } from './../commons/constants';\r\nimport { Link } from 'react-router-dom';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\nfunction ViewPatientAppointments() {\r\n\r\n    const [patientAppointments, setpatientAppointments] = useState([])\r\n\r\n    var x = localStorage.getItem('credentials')\r\n    var cred = JSON.parse(x);\r\n\r\n    useEffect(() => {\r\n        getAllAppointments();\r\n    }, [])\r\n\r\n    console.log(cred.pid)\r\n\r\n    const getAllAppointments = () => {\r\n        axios.get(url + '/patient/appointments/' + cred.patId).then((response) => {\r\n            const result = response.data;\r\n            console.log(result.data)\r\n            if (result.status === 'success') {\r\n                setpatientAppointments(result.data);\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error Fetching Appointment Data ....\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n               // window.alert(\"Error Fetching Appointment Data ....\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> My Appointments </h1>\r\n            {/* <div className=\"row mb-3\">\r\n                <label htmlFor=\"dob\" className=\"col-xs-3 col-sm-3 col-form-label\">Choose a Date</label>\r\n                <div class=\"col-xs-9 col-sm-9\">\r\n                    <input type=\"date\" name=\"dob\" className=\"form-control\" id=\"dob\" />\r\n                    \r\n                </div>\r\n            </div> */}\r\n            {(patientAppointments.length === 0) && \r\n            <div class=\"jumbotron\">\r\n                <div class=\"container\">\r\n                    <h3>At this moment, No appointments are booked </h3>\r\n                    <h5>Select a speciality to book one</h5>\r\n                    <Link to='/client/speciality'>\r\n                        <button className=\"btn btn-outline-dark\">select a Speciality</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            }\r\n            {patientAppointments.map((item) => {\r\n                return (\r\n                    <div className=\"card\" style={{ width:\"100%\",marginLeft: \"100px\", marginBottom: \"20px\" , display:\"inline-block\" , padding:\"10px\", fontSize:\"18px\" , fontFamily:\"poppins\" ,flexWrap:\"wrap\" }}>\r\n                        <div className=\"col\">\r\n                            <label>Appointment Id : {item.appId}</label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label>Doctor Name : Dr. {item.docName}</label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label>Appointment Date : {item.appDate}</label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label>Slot Time : {item.slotTime}</label>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPatientAppointments\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './ViewDocInfo.css'\r\nimport { url } from './../commons/constants';\r\nimport axios from 'axios';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction ViewDocInfo() {\r\n    const [fees, setFees] = useState(0.0);\r\n    const [exp, setExp] = useState(0);\r\n    const [docdesc, setDocdesc] = useState('');\r\n    const [docCity, setDocCity] = useState('');\r\n    const [docPhone, setDocPhone] = useState('');\r\n    const [profilePic, setProfilePic] = useState(undefined);\r\n\r\n    const history = useHistory()\r\n    \r\n    var cred = localStorage.getItem('DocCreds');\r\n    var doctor = JSON.parse(cred);\r\n\r\n    const updateDocInfo =(e)=>{\r\n        \r\n\r\n\r\n        if (docPhone.length !== 10) {\r\n            Toastify({\r\n                text: \"please enter 10 digit phone number\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n                    }\r\n\r\n        \r\n       \r\n         else if (docCity.length === 0) {\r\n            Toastify({\r\n                text: \"please enter city\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n        } \r\n        // else if (docPhone.length !== 10) {\r\n        //     Toastify({\r\n        //         text: \"please enter 10 digit phone number\",\r\n        //         className: \"info\",\r\n        //         offset: {\r\n        //                 x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n        //                 y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n        //               },\r\n        //             style: {\r\n        //                   background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n        //                 }\r\n        //               }).showToast();\r\n          \r\n            //  alert('phone number should be of 10 digits')\r\n        \r\n        else if (exp === 0) {\r\n            Toastify({\r\n                text: \"please enter Experience (in years)\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           \r\n            // alert('please enter Experience (in years)')\r\n        } \r\n        else if (docdesc.length === 0) {\r\n            Toastify({\r\n                text: \"please enter Description\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();}\r\n\r\n             else if (fees === 0.0) {\r\n            Toastify({\r\n                            text: \"please enter fees\",\r\n                            className: \"info\",\r\n                            offset: {\r\n                                    x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                    y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                  },\r\n                                style: {\r\n                                      background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                                    }\r\n                                  }).showToast();\r\n                        //alert('please enter fees')\r\n                    }\r\n\r\n\r\n          \r\n        else if (profilePic === undefined) {\r\n            Toastify({\r\n                text: \"please upload profile pic\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('please upload profile pic')\r\n        } \r\n       \r\n        \r\n        else {\r\n                e.preventDefault()\r\n                const data = new FormData();\r\n                \r\n                data.append('docId', doctor.docId);\r\n                data.append('docCity', docCity);\r\n                data.append('docPhone', docPhone);\r\n                data.append('docExperience', exp);\r\n                data.append('docDescription', docdesc);\r\n                data.append('docProfilePic', profilePic);\r\n                data.append('docFees', fees);\r\n            \r\n                axios.put(url + '/doctor/editprofile',data).then(response=>{\r\n                    if(response.data.status==='success'){\r\n                        alert(\"updated successfully\")\r\n                        history.push('/docsignin')\r\n                    }else{\r\n                        \r\n                        Toastify({\r\n                            text: \"please enter Description\",\r\n                            className: \"info\",\r\n                            offset: {\r\n                                    x: 650, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                    y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                  },\r\n                                style: {\r\n                                      background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                                    }\r\n                                  }).showToast();\r\n                      \r\n                       \r\n                        // alert('failed to update your profile')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {/*            \r\n                <h1> Doctor Info</h1>\r\n                <br/>\r\n                <label>Doctor Name : {doctor.docName} </label>\r\n                <br/>\r\n                <label>Doctor City : {doctor.docCity} </label>\r\n                <br/>\r\n                <label>Doctor Description : {doctor.docExperience} </label>\r\n                <br/>\r\n                <label>Doctor Phone : {doctor.docPhone} </label>\r\n                <br/>\r\n                <label>Doctor docFees: {doctor.docFees} </label>\r\n                <br/>\r\n                <label>Doctor Mail : {doctor.email} </label> */}\r\n\r\n\r\n                <div className=\"col-md-5 col-lg-12\" style={{fontFamily:'poppins'}}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\" style={{textAlign:\"center\"}}>\r\n                        {/* Your Profile\r\n                            <div className=\"box-inside\"><h1 style={{textAlign:\"center\"}}></h1>\r\n                            dber\r\n                            </div> */}\r\n                \r\n                            <div className=\"card-photo\" >\r\n                        \r\n                                <img src={url + '/' + `${doctor.docProfilePic}`} alt=\"\" />\r\n                            </div>\r\n                            Dr. {doctor.docName}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            \r\n                            <div className=\"card-description\">\r\n                                <div style={{display:'flex'}}>\r\n                                <h4 style={{marginInline:'50px',marginLeft:'150px'}}>\r\n                            {doctor.email} \r\n                                </h4>\r\n                            <h4 style={{marginRight:'10px',marginLeft:'auto'}}>\r\n\r\n                                Reg.no: {doctor.docRegistrationNo}\r\n                            </h4>\r\n\r\n                                </div>\r\n                                <br />\r\n                                <label className=\"col-sm-2 col-form-label\">Contact : </label>\r\n                                <input type=\"text\"className=\"form-control\" required=\"required\" placeholder={doctor.docPhone} onChange={(e) => {\r\n                                    setDocPhone(e.target.value)\r\n                                }}/>\r\n                                \r\n                                <br />\r\n                                 \r\n                                City: <input type=\"text\" className=\"form-control\" placeholder={doctor.docCity} onChange={(e) => {\r\n                                    setDocCity(e.target.value)\r\n                                }}/>\r\n                                <br />\r\n                                Experience : <input type=\"number\" placeholder={doctor.docExperience} style={{ width: '65px' }} onChange={(e) => {\r\n                                    setExp(e.target.value)\r\n                                }} /> Years <br /><br />\r\n                                Description: <textarea className=\"form-control\" placeholder={'click to edit description -\\n' + doctor.docDescription} cols=\"30\" rows=\"4\" onChange={(e) => {\r\n                                    setDocdesc(e.target.value)\r\n                                }}></textarea>\r\n                            Fees :\r\n                            <input className=\"form-control\" type=\"number\" placeholder={doctor.docFees} onChange={(e) => {\r\n                                    setFees(e.target.value)\r\n                                }} />\r\n                                <br />\r\n                                Profile pic: <input type=\"file\" className=\"form-control\" onChange={(e) => {\r\n                                    setProfilePic(e.target.files[0])\r\n                                }} />\r\n                                <br />\r\n                                <p>\r\n                                Note: Please Logout and LogIn again to see your changes\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"card-button\">\r\n                                <button className=\"btn btn-warning\" onClick={updateDocInfo}> Update your Info </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewDocInfo\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { useState, useEffect } from 'react';\r\nimport { AiFillBank, AiFillMail } from \"react-icons/ai\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { IoMdCall } from \"react-icons/io\";\r\nimport { url } from '../commons/constants';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction BloodBankSearch(props) {\r\n\r\n    const [searchedBloodBanks, setSearchedBloodBanks] = useState([]);\r\n    const { search } = useLocation()\r\n    const queryvalues = queryString.parse(search)\r\n    useEffect(() => {\r\n        getSearchedBloodbanks();\r\n    }, []);\r\n\r\n    const getSearchedBloodbanks = () => {\r\n        axios.get(url + \"/bloodbank/search?q=\" + queryvalues.query).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setSearchedBloodBanks(result.data);\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error fetching in search Data...!!!\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n               // alert(\"Error fetching in search Data...!!!\");\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>Showing search results for city : \"{queryvalues.query}\"</h2>\r\n            <Link to='/blood'>\r\n                <button className=\"btn btn-warning\">Back to Bloodbank Page</button>\r\n            </Link>\r\n            {searchedBloodBanks.map((item) => {\r\n                return (\r\n                    <>\r\n                        \r\n                        <div className=\" bg-light\">\r\n                         \r\n                            <div class=\"container-fluid\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"row\" style={{ backgroundColor: \"rgb(206, 245, 234)\", margin: \"5px\", padding: \"5px\", borderRadius: \"10px\" }}>\r\n                                       \r\n                                            <div class=\"col-md-10  \">\r\n\r\n                                                <h3 style={{ marginTop: \"10px\" }}>\r\n                                                    <span style={{margin:'1px'}}><AiFillBank size={50}/></span>\r\n                                                   {item.bbName}\r\n                                                </h3>\r\n                                                <p style={{ marginLeft: \"-2px\" }}>\r\n                                                    <span><GoLocation /></span>\r\n                                                        {item.bbCity}\r\n                                                    </p>\r\n                                                <span><p><IoMdCall />{item.bbPhone}</p>  <p><AiFillMail /> {item.bbEmail}</p></span>\r\n                                                {/* <button className=\"btn btn-primary\">Select</button> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n            }\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BloodBankSearch\r\n","import React from 'react'\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport Navbar from './../components/Navbar';\r\nimport Home from './Home';\r\nimport DocSignUp from './DocSignUp';\r\nimport BookAppointment from './BookAppointment';\r\nimport Welcome from './Welcome';\r\nimport '../components/nav';\r\nimport '../components/Navbar.css'\r\nimport DoctorsBySpeciality from './../components/DoctorsBySpeciality';\r\nimport Settings from './Settings';\r\nimport AppointmentConfirmation from './AppointmentConfirmation';\r\nimport BloodBank from './BloodBank';\r\nimport ViewPatientAppointments from './ViewPatientAppointments';\r\n\r\nimport ViewDocInfo from './ViewDocInfo';\r\nimport BloodBankSearch from './BloodBankSearch';\r\n\r\n\r\n\r\nfunction SideBar({authorized,setIsAuthorized}) {\r\n \r\n  // if(!authorized)\r\n  //   return <Redirect to=\"/\"/>\r\n  return (\r\n    <div>\r\n      <Router>\r\n            <Navbar enablePersistence={true} setIsAuthorized={setIsAuthorized} />\r\n            <Switch>\r\n              {/* <Route  path='/'>\r\n                <Redirect to ='/welcome' />\r\n              </Route> */}\r\n              <Route  path='/client/home'component={Welcome} />\r\n              <Route  path='/client/speciality' component={()=>{return <Home enablePersistence={true} />}} />\r\n              <Route  path='/client/blood' component={BloodBank} />\r\n              <Route  path='/client/bloodsearchresults' component={BloodBankSearch}/>\r\n              <Route  path='/client/docSignUp' component={DocSignUp} />\r\n              <Route  path='/client/setting' component={Settings}/>\r\n              {/* <Route path='/docBySpec' exact component={DoctorsBySpeciality} /> */}\r\n              <Route  path='/client/docBySpec/:id' enablePersistence={true} component={DoctorsBySpeciality} />\r\n              <Route  path='/client/appointment/:id' component={BookAppointment} />\r\n              <Route path='/client/confirm' component={AppointmentConfirmation} />\r\n              <Route  path='/client/patientAppointment' component={ViewPatientAppointments} />\r\n\r\n              {/* <Route path='/docBySpec' component={} /> */}\r\n               {/* <Route path='/signin' component={Signin} /> */}\r\n            </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport './Signup.css'\r\nimport Axios from 'axios'\r\nimport {useState} from 'react'\r\nimport {url} from '../commons/constants';\r\nimport \"toastify-js/src/toastify.css\"\r\n// import './Signup-validation.js'\r\nimport Toastify from 'toastify-js'\r\n\r\n// import Signin from './pages/Signin';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n\r\n    const validEmail = new RegExp(\r\n        '.+\\@.+\\..+'\r\n     );\r\n\r\n        const validPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\r\n    \r\n    const [p_name , setP_name] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [p_gender, setP_gender] = useState('')\r\n    const [p_phone, setP_phone] = useState('')\r\n    const [p_dob, setP_dob] = useState('')\r\n    const [p_desc, setP_desc] = useState('');\r\n    \r\n    //Axios.defaults.withCredentials = true\r\n    const patientSignup = (e) =>{\r\n        if (p_name.length === 0) {\r\n            Toastify({\r\n\r\n                text: \"please enter name\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, \r\n                        y: 5    // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n\r\n               \r\n                        }\r\n                      }).showToast();\r\n          } else if (p_gender.length === 0) {\r\n            Toastify({\r\n                text: \"please select gender\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          } \r\n         else if (p_phone.length !== 10) {\r\n\r\n            Toastify({\r\n                text: \"please enter 10 digit phone number\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          } \r\n         else if (email.length === 0) {\r\n            Toastify({\r\n                text: \"Email id cannot be empty\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          } else if(!validEmail.test(email)){\r\n            Toastify({\r\n                text: \"Please enter valid email id\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          }\r\n         else if (password.length === 0) {\r\n            Toastify({\r\n                text: \"Password cannot be empty\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          } else if(!validPassword.test(password)){\r\n            Toastify({\r\n                text: \" password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n             \r\n          }\r\n         else if (p_dob.length === 0) {\r\n            Toastify({\r\n                text: \" Please select date of birth\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n          } \r\n          else {\r\n                e.preventDefault()\r\n                const data = new FormData();\r\n                data.append('patName', p_name);\r\n                data.append('patGender', p_gender);\r\n                data.append('patPhone', p_phone);\r\n                data.append('patDob', p_dob);\r\n                data.append('patDescription', p_desc);\r\n                data.append('email', email);\r\n                data.append('password', password);\r\n\r\n                try {\r\n                    Axios.post(url+'/patient', data).then((response) => {\r\n                        const result = response.data;\r\n                        if(result.status == \"success\"){\r\n                            console.log(response.status);\r\n                            console.log(response.data);\r\n                            Toastify({\r\n                                text: \"You have successfully registered as patient\",\r\n                                className: \"info\",\r\n                                offset: {\r\n                                  x:500, \r\n                                  y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                      },\r\n                                    style: {\r\n                                          background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                        }\r\n                                      }).showToast();\r\n                            //window.alert('. . . CONGRATS ! YOU ARE SUCCESSFULLY REGISTERED AS PATIENT AT Clinic-on-click  . . .');\r\n                            window.location = '/';\r\n                        }else{\r\n                            Toastify({\r\n                                text: \" This email is already registered\",\r\n                                className: \"info\",\r\n                                offset: {\r\n                                  x:500, \r\n                                  y:5// vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                      },\r\n                                    style: {\r\n                                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                                        }\r\n                                      }).showToast();\r\n                        }\r\n                    })\r\n                    \r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-sm-12 col-md-auto col-lg-5 \">\r\n                        <h1 style={{marginBottom:\"80px\"}}> </h1>\r\n                        <div>\r\n                        <h1 style={{ textAlign: 'center' , fontSize:'50px', marginBottom:\"50px\"}}>\r\n                            Clinic-on-click\r\n                        </h1>\r\n                        <h3 style={{ textAlign: 'center' }}>online Doctor Consultancy</h3>\r\n                        </div>\r\n                        <br /><br />\r\n                        <div style={{ textAlign: 'center' }}>\r\n                        <img src=\"./images/main_image.jpg\" class=\"img-responsive Hospitalimg\" alt=\"Hospitalimg\"/>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div>&nbsp;</div>\r\n                   \r\n                        \r\n        \r\n                    <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-6\" >\r\n                    <div style={{ textAlign: 'right' , marginBottom:\"40px\",marginRight:\"80px\"}}>\r\n                            <Link to=\"/\">\r\n                            <button type=\"button\" class=\"btn btn-warning\">Go Back to Login</button>\r\n                            </Link>\r\n                        </div>     \r\n                        <h2 style={{ textAlign: 'right',marginLeft:\"10px\"}}>Sign up at Clinic-on-click</h2>\r\n                        <h5 style={{ textAlign: 'center',marginLeft:\"120px\" }}>Just fill up some details </h5>\r\n                        <h5 style={{ textAlign: 'center',marginLeft:\"120px\" }}>And instantly Book appointment with verified Doctors !</h5>\r\n                        <br />\r\n                        \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"name\" className=\"col-xs-3 col-sm-3 col-form-label required\">Full Name </label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"text\" name=\"name\" className=\"form-control\" id=\"name\" placeholder='Enter your full name' \r\n                                onChange={(e) => {\r\n                                    setP_name(e.target.value)\r\n                                    }}/>\r\n                            </div>\r\n                        </div> \r\n\r\n\r\n                        <div className=\"row mb-3\">\r\n\r\n                            <legend className=\"col-xs-3 col-form-label col-sm-3 pt-0 required\">Gender</legend>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                            &nbsp;&nbsp;&nbsp;&nbsp; <input type=\"radio\" name=\"gender\" className=\"form-check-input\" id=\"gender\" value=\"male\"  onChange={(e) => {\r\n                                    setP_gender(e.target.value)\r\n                                    }} \r\n                                    /> Male &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"radio\" name=\"gender\" className=\"form-check-input\" id=\"gender\" value=\"female\"  onChange={(e) => {\r\n                                    setP_gender(e.target.value)\r\n                                    }}/> Female &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"radio\" name=\"gender\" className=\"form-check-input\" id=\"gender\" value=\"other\"  onChange={(e) => {\r\n                                    setP_gender(e.target.value)\r\n                                    }} />  Other\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"phone\" className=\"col-xs-3 col-sm-3 col-form-label required\">Phone </label>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                                <input type=\"text\" name=\"phone\" className=\"form-control\" id=\"phone\" placeholder='Enter your Phone number' onChange={(e) => {\r\n                                    setP_phone(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-xs-3 col-sm-3 col-form-label required\">Email</label>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your email-id' \r\n                                onChange={(e) => {\r\n                                    setEmail(e.target.value)\r\n                                    }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"password\" className=\"col-xs-3 col-sm-3 col-form-label required \">Password</label>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter new password'\r\n                                 onChange={(e) => {\r\n                                    setPassword(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                     \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"dob\" className=\"col-xs-3 col-sm-3 col-form-label required\">Date of Birth</label>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                                <input type=\"date\" name=\"dob\" className=\"form-control\" id=\"dob\"  onChange={(e) => {\r\n                                    setP_dob(e.target.value)\r\n                                    }}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    \r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"desc\" className=\"col-xs-3 col-sm-3 col-form-label\">Description </label>\r\n                            <div class=\"col-xs-9 col-sm-9\">\r\n                            <textarea className=\"form-control\" id=\"desc\" rows=\"3\" placeholder=\"Enter your description.\" onChange={(e) => {\r\n                                setP_desc(e.target.value)\r\n                            }}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" class=\"btn btn-success col-12\" onClick={patientSignup} style={{cursor:\"pointer\"}}>Sign Up</button>\r\n                                    \r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <br /><br />                \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup;\r\n","import React from 'react'\r\nimport { Axios } from 'axios';\r\nimport './DocSignin.css'\r\n\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { url } from './../commons/constants';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\n\r\nfunction DocSignin({ setIsdrAuthorized }) {\r\n\r\n    let history = useHistory();\r\n    const [emailLogin, setemailLogin] = useState('')\r\n    const [passwordLogin, setpasswordLogin] = useState('')\r\n\r\n    axios.defaults.withCredentials = false;\r\n\r\n    const authenticateDoctor = (e) => {\r\n        if (emailLogin.length === 0) {\r\n           \r\n            Toastify({\r\n                text: \"please enter email Id\",\r\n                className: \"info\",\r\n                offset: {\r\n                    x: 600, \r\n                    y: 5   // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast(); // alert('please enter email')\r\n        } else if (passwordLogin.length === 0) {\r\n            Toastify({\r\n                text: \"please enter password\",\r\n                className: \"info\",\r\n                offset: {\r\n                    x: 600, \r\n                    y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n           // alert('please enter password')\r\n        } else {\r\n            e.preventDefault()\r\n            const data = new FormData();\r\n\r\n            data.append('email', emailLogin);\r\n            data.append('password', passwordLogin);\r\n\r\n            console.log(emailLogin);\r\n            console.log(passwordLogin);\r\n            try {\r\n                axios.post(url + '/doctor/auth', data).then((response) => {\r\n                    const result = response.data;\r\n                    console.log(result.data);\r\n                    if (result.status === 'success') {\r\n                        console.log(result.status);\r\n                        console.log(result.data);\r\n                        localStorage.setItem('DocCreds', JSON.stringify(result.data))\r\n                        // window.location = '/docsignin';\r\n                        setIsdrAuthorized(true)\r\n\r\n                        Toastify({\r\n                            text: \" Hey! you are Successfully Logged In to Clinic-on-click\",\r\n                            className: \"info\",\r\n                            offset: {\r\n                                    x:500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                    y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                                  },\r\n                                style: {\r\n                                      background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                    }\r\n                                  }).showToast();\r\n\r\n                       // window.alert('Hey! you are Successfully Logged In to Clinic-on-click');\r\n\r\n                      \r\n\r\n                        history.push('/docsignin')\r\n                    } else {\r\n                        window.alert('Registeration Failed..');\r\n                    }\r\n\r\n                });\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/\">\r\n                                <button type=\"submit\" class=\"btn btn-warning\">Goto Patient's Login</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 col-md-9 col-lg-6\" style={{ marginTop: 70 }}>\r\n                        <h1>\r\n                            Welcome to Clinic-on-click\r\n                        </h1>\r\n                        <h4 style={{ marginLeft: 90 }}>\r\n                            Online Doctor Consultancy\r\n                        </h4>\r\n                        <h1 style={{ marginLeft: 100 }} >\r\n                        <img src=\"./images/main_image.jpg\" class=\"img-responsive Hospitalimg\" alt=\"Hospitalimg\" />\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-3 col-md-9 col-lg-6\" style={{ marginTop: 70 }}>\r\n                        <h1 style={{ textAlign: 'center' }}>Sign In as Doctor</h1>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-3 col-form-label\">Email</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your registered email-id'\r\n                                    onChange={(e) => {\r\n                                        setemailLogin(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-3 col-form-label\">Password</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter your password'\r\n                                    onChange={(e) => {\r\n                                        setpasswordLogin(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div align=\"center\" className=\"\">\r\n\r\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={authenticateDoctor}>Sign In as Doctor</button><br />\r\n\r\n                            <Link to='/forgotpassword'>\r\n                                <button type=\"button\" class=\"btn btn-secondary transparent-btn\" >Forgot Password ?</button>\r\n                            </Link><br />\r\n                            OR <br /><br />\r\n                            <Link to=\"/docsignup\">\r\n                                <button type=\"button\" class=\"btn btn-primary\">Register New Doctor</button>\r\n                            </Link>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocSignin\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { url } from './../commons/constants';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\nfunction DoctorAppointments() {\r\n\r\n    const [getDoctorAppointments, setgetDoctorAppointments] = useState([])\r\n\r\n    useEffect(() => {\r\n        allDoctorAppointments();\r\n    }, [])\r\n\r\n    var cred = localStorage.getItem('DocCreds')\r\n    var doctor = JSON.parse(cred);\r\n    var allDoctorAppointments = () => {\r\n        axios.get(url + '/doctor/appointmentsofdoctor/' + doctor.docId).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setgetDoctorAppointments(result.data);\r\n            } else {\r\n                Toastify({\r\n                    text: \"Error Fetching Data .....\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n               // window.alert(\"Error Fetching Data .....\")\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Doctor Appointments</h1>\r\n            <table className=\"table \">\r\n                            <thead className=\"table-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Appointment Id</th>\r\n                                    <th scope=\"col\">Appointment Date</th>\r\n                                    <th scope=\"col\">Patient Name</th>\r\n                                    <th scope=\"col\">Slot Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody style={{fontFamily:\"poppins\"}}>\r\n            {\r\n                getDoctorAppointments.map((item) => {\r\n                    return (<>\r\n                           \r\n                                <tr>\r\n                                    <th scope=\"row\">{item.appId}</th>\r\n                                    <td>{item.appDate}</td>\r\n                                    <td>{item.pname}</td>\r\n                                    <td>{item.slotTime}</td>\r\n                                </tr>\r\n                           \r\n\r\n                    </>\r\n                    )\r\n                }\r\n                )\r\n            }\r\n             </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorAppointments\r\n","import axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { useHistory,Link } from 'react-router-dom';\r\nimport { url } from '../commons/constants';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\n\r\nfunction ChangeDocPassUsingOld() {\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPass, setConfirmNewPass] = useState('');\r\n\r\n    const history=useHistory()\r\n    const validPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\r\n\r\n    const changePassword = ()=>{\r\n\r\n        if(oldPassword.length === 0){\r\n            Toastify({\r\n                text: \" Please enter old password\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, \r\n                        y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right,#FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n        }else if(newPassword.length === 0){\r\n            Toastify({\r\n                text: \" Please enter new password\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n\r\n        \r\n          //  alert('new password cannot be Empty')\r\n        }else if(!validPassword.test(newPassword)){\r\n            Toastify({\r\n                text: \" password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space'\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5  // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           \r\n           \r\n           \r\n           \r\n           \r\n           \r\n          // alert(' password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space');\r\n        }else if(confirmNewPass !== newPassword){\r\n            Toastify({\r\n                text: \" Password Does not match\",\r\n                className: \"info\",\r\n                offset: {\r\n                  x: 600, \r\n                  y: 5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n\r\n           \r\n            // alert('Password Does not match')\r\n        }else{\r\n            var cred = localStorage.getItem('DocCreds');\r\n            var doctor = JSON.parse(cred);\r\n\r\n            const data = new FormData()\r\n\r\n            data.append('id',doctor.docId)\r\n            data.append('oldPassword',oldPassword)\r\n            data.append('newPassword',newPassword)\r\n            \r\n\r\n            axios.put(url +'/doctor/editpassword',data).then((response)=>{\r\n                if(response.data.status==='success'){\r\n                    Toastify({\r\n                        text: \"password updated successfully\",\r\n                        className: \"info\",\r\n                        offset: {\r\n                                x:500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                              },\r\n                            style: {\r\n                                  background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                }\r\n                              }).showToast();\r\n                    //alert(\"password updated successfully\")\r\n                    history.push('/viewProfile')\r\n                }else{\r\n                    alert('Failed updating password')\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"col-md-6 offset-md-3 mt-5\">\r\n                <br />\r\n                   <h2 align='center'>Change Password</h2>\r\n            <Link to='/viewProfile'>\r\n                <button className=\"btn btn-warning btn-sm\"> Back to Profile</button>\r\n            </Link>\r\n                   <hr />\r\n                   <br/>\r\n                    <div className=\"form-group\">\r\n                        <label>Old password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter old password\" required=\"required\" onChange={(e) =>{\r\n                            setOldPassword(e.target.value)\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Create New password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter new password\" required=\"required\" onChange={(e) =>{\r\n                            setNewPassword(e.target.value)\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Confirm New password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter new password again\" required=\"required\" onChange={(e) =>{\r\n                            setConfirmNewPass(e.target.value)\r\n                        }}/>\r\n                    </div>\r\n                    \r\n                    <hr />\r\n                   \r\n                    <hr />\r\n                    \r\n                        <button type= \"button\" className=\"btn btn-success col-md-6 offset-md-3\" onClick={changePassword}> Change password</button>\r\n                   \r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeDocPassUsingOld\r\n","import React from 'react'\r\n// import Navbar from '../components/Navbar'\r\nimport './DoctorDashboard.css'\r\nimport axios from 'axios';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect, Link, useHistory } from 'react-router-dom';\r\nimport DoctorAppointments from './DoctorAppointments';\r\nimport ViewDocInfo from './ViewDocInfo';\r\nimport { url } from './../commons/constants';\r\nimport ChangeDocPassUsingOld from './ChangeDocPassUsingOld';\r\n\r\nfunction DoctorDashboard({setIsdrAuthorized}) {\r\n    const history= useHistory()\r\n    var cred = localStorage.getItem('DocCreds');\r\n    var doctor = JSON.parse(cred);\r\n        var logOut = () =>{\r\n            {\r\n                axios.get(url + '/doctor/logout/' + doctor.docId).then((response) => {\r\n                    const result = response.data;\r\n                    if(result.status === 'success'){\r\n                        localStorage.clear();\r\n                        setIsdrAuthorized(false)\r\n                        history.push('/docsignin');\r\n                    }\r\n            })\r\n\r\n            }\r\n        }\r\n    \r\n    return (\r\n        <div>\r\n        <Router>\r\n        <body id=\"body-pd\">\r\n                <header class=\"header\" id=\"header\">\r\n                    {/* <div class=\"header_toggle\"> <i class='bx bx-menu' id=\"header-toggle\"></i> </div> */}\r\n\r\n                    <a className=\"navbar-brand\" href=\"\">\r\n                    <Link to=\"/viewProfile\" class=\"nav_link\">\r\n                        <img src=\"\\images\\COC.png\" alt=\"\" width=\"120px\" height=\"30\" class=\"d-inline-block align-text-top\" /> \r\n                        </Link>  \r\n\r\n                    </a>\r\n                    <p style={{marginLeft: \"auto\" ,marginRight: \"15px\",fontSize:'20px',marginTop:'10px'}}>Hello, Dr. {doctor.docName}</p>\r\n                    <div class=\"header_img\"> <img src={url + '/'+`${doctor.docProfilePic}`} alt={doctor.docProfilePic} /> </div>\r\n                </header>\r\n                <div class=\"l-navbar\" id=\"nav-bar\" >\r\n                    <nav class=\"nav\">\r\n                        <div>\r\n                            <a href=\"\" class=\"nav_logo\">\r\n                            <Link to=\"/viewProfile\" class=\"nav_link\">\r\n                                <i class='bx bx-layer nav_logo-icon'></i>\r\n                                <span class=\"nav_logo-name\"><h4>COC</h4></span>\r\n                                </Link>\r\n                                \r\n                            </a>\r\n                            <div class=\"nav_list\">\r\n                                \r\n                                    <Link to=\"/viewProfile\" class=\"nav_link\">\r\n                                    <i class='bx bx-folder nav_icon'></i>\r\n                                    <span class=\"nav_name\">View Profile</span> \r\n                                    </Link>\r\n\r\n                                    <Link to=\"/appointmentDoc\" class=\"nav_link\">\r\n                                    <i class='bx bx-grid-alt nav_icon'></i>\r\n                                    <span class=\"nav_name\">Appointments</span>\r\n                                    </Link>\r\n                                    <Link to=\"/changedocpass\" class=\"nav_link\">\r\n                                    {/* <i class='bx bx-grid-alt nav_icon'></i> */}\r\n                                    <span class=\"nav_name\">Change Password</span>\r\n                                    </Link>\r\n                                \r\n                              \r\n                                    {/* <Link to=\"/blood\" class=\"nav_link\">\r\n                                    <i class='bx bx-donate-blood nav_icon'></i>\r\n                                    <span class=\"nav_name\"></span> \r\n                                    </Link> */}\r\n\r\n                            </div>\r\n                        </div> \r\n                        <div class=\"nav_link\" role='button'>   \r\n                        <i class='bx bx-log-out nav_icon' ></i> <span class=\"nav_name\" onClick={logOut}>SignOut</span> \r\n                         \r\n                        </div> \r\n                    </nav>\r\n                </div>\r\n                  \r\n                {/* <div class=\"height-100 bg-light\">\r\n                    <h4>Main Components</h4>\r\n                </div> */}\r\n            </body>\r\n\r\n           <Switch>\r\n               <Route exact path='/docsignin'>\r\n                <Redirect to='/viewProfile'/>\r\n               </Route>\r\n              <Route path='/appointmentDoc' component={DoctorAppointments} />\r\n              <Route path='/viewProfile' component={ViewDocInfo} />\r\n              <Route path='/changedocpass' component={ChangeDocPassUsingOld}/>\r\n           </Switch>\r\n        </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\n    export default DoctorDashboard\r\n\r\n","import axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from '../commons/constants';\r\nimport Toastify from 'toastify-js'\r\nimport \"toastify-js/src/toastify.css\"\r\nfunction ForgotPassword() {\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [encOTP, setEncOTP] = useState('');\r\n    const [userOtp, setUserOtp] = useState(0);\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const sendOTP = () => {\r\n        if(email.length === 0){\r\n            Toastify({\r\n                text: \"Enter mail id\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n        }else{\r\n       \r\n       \r\n        const emailform = new FormData()\r\n        emailform.append('useremail',email)\r\n        const body ={\r\n            \"email\":email\r\n        }\r\n\r\n        axios.post(url + '/email/forgot',body).then((response) => {\r\n\r\n            if (response.data.status === 'success') {\r\n                setEncOTP(response.data.data)\r\n                setIsOtpSent(true)\r\n            } else {\r\n                Toastify({\r\n                    text: \"Enter correct Registered mail id\",\r\n                    className: \"info\",\r\n                    offset: {\r\n                            x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                            y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                          },\r\n                        style: {\r\n                              background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                            }\r\n                          }).showToast();\r\n                // console.log(response.data.data)\r\n               // window.alert(\"email not found in record\")\r\n            }\r\n        })\r\n    }\r\n    }\r\n    const verifyOtp = () => {\r\n        const otp = (parseInt(encOTP) + 31) / 31;\r\n        console.log('otp '+otp)\r\n        console.log('userOtp '+userOtp)\r\n        // if (userOtp.length !== 4) {\r\n        //     Toastify({\r\n        //         text: \"OTP should be of 4-digits which is sent on your email\",\r\n        //         className: \"info\",\r\n        //         offset: {\r\n        //                 x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n        //                 y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n        //               },\r\n        //             style: {\r\n        //                   background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n        //                 }\r\n        //               }).showToast();\r\n        //    // alert('OTP should be of 4-digits which is sent on your email')\r\n        //             }\r\n         if(otp != userOtp){\r\n            console.log('otp '+otp)\r\n            console.log('userOtp '+userOtp)\r\n            Toastify({\r\n                text: \"Incorrect OTP ! please enter a correct OTP\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('Incorrect OTP ! please enter a correct OTP')\r\n        } else if (password.length === 0 && confirmPassword.length === 0) {\r\n            Toastify({\r\n                text: \"enter a new password\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 600, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('enter a new password')\r\n        } else if (password !== confirmPassword) {\r\n            Toastify({\r\n                text: \"confirm password not matched..Re-enter the password\",\r\n                className: \"info\",\r\n                offset: {\r\n                        x: 500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                        y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                      },\r\n                    style: {\r\n                          background: \"linear-gradient(to right, #FF0000, #FF0000)\",\r\n                        }\r\n                      }).showToast();\r\n           // alert('confirm password not matched..Re-enter the password')\r\n        } else {\r\n            const data = new FormData();\r\n\r\n            data.append('email', email);\r\n            data.append('newPassword', password);\r\n\r\n            axios.post(url + '/email/verifyotp',data).then((response) => {\r\n                if (response.data.status === 'success') {\r\n                    Toastify({\r\n                        text: \"Your password is reset ! please use new password to logIn now\",\r\n                        className: \"info\",\r\n                        offset: {\r\n                                x: 500, // horizontal axis - can be a number or a string indicating unity. eg: '2em'\r\n                                y:5 // vertical axis - can be a number or a string indicating unity. eg: '2em'\r\n                              },\r\n                            style: {\r\n                                  background: \"linear-gradient(to right, #32cd32, #32cd32)\",\r\n                                }\r\n                              }).showToast();\r\n                   // window.alert('Your password is reset ! please use new password to logIn now')\r\n                    history.push('/')\r\n                } else {\r\n                    window.alert('password updatation failed')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n\r\n\r\n                <div className=\"main_display_form\">\r\n                    <hr /><h1 style={{ textAlign: 'center' }}>Forgot password</h1><hr />\r\n\r\n                    {!isOtpSent && (\r\n                        <>\r\n                            <h4 style={{ textAlign: 'center' }}>Please enter your Email-id to reset password</h4>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your registered email-id'\r\n                                        onChange={(e) => {\r\n                                            setEmail(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <button class=\"btn btn-success\" onClick={sendOTP}>Send OTP</button><br />\r\n\r\n                        </>\r\n                    )}\r\n                    {isOtpSent && (\r\n                        <>\r\n                            <div className=\"alert alert-success\" role=\"alert\">\r\n                                OTP is successfully sent to your registered Email-Id ! <br />\r\n                                You can now set a new password\r\n                            </div>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" value={email} disabled />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"otp\" className=\"col-sm-2 col-form-label\">OTP: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"otp\" placeholder='Enter the received 4-digit OTP'\r\n                                        onChange={(e) => {\r\n                                            setUserOtp(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter your password'\r\n                                        onChange={(e) => {\r\n                                            setPassword(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"confirmpassword\" className=\"col-sm-2 col-form-label\">Confirm Password: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" placeholder='confirm your password'\r\n                                        onChange={(e) => {\r\n                                            setConfirmPassword(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <button class=\"btn btn-success\" onClick={verifyOtp}>Change password</button><br />\r\n\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import './App.css';\r\nimport Signin from './pages/Signin';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport SideBar from './pages/SideBar';\r\n\r\n// import Appointment from './pages/Appointment';\r\nimport './components/Navbar.css';\r\nimport './components/nav.js';\r\nimport Welcome from './pages/Welcome';\r\nimport Signup from './pages/Signup';\r\nimport DocSignUp from './pages/DocSignUp';\r\nimport DocSignin from './pages/DocSignin';\r\nimport DoctorDashboard from './pages/DoctorDashboard';\r\nimport Settings from './pages/Settings';\r\nimport ViewDocInfo from './pages/ViewDocInfo';\r\nimport ForgotPassword from './components/ForgotPassword';\r\n\r\n\r\nfunction App() {\r\n  const [isAuthorized, setIsAuthorized] = useState(false)\r\n  const [isdrAuthorized, setIsdrAuthorized] = useState(false)\r\n\r\n   \r\n useEffect(()=>{\r\n  const p = localStorage.getItem('credentials')\r\n  const d = localStorage.getItem('DocCreds')\r\n\r\n\r\n\r\n  if(p!=null){\r\n    setIsAuthorized(true);\r\n   // setIsdrAuthorized(true);\r\n  }\r\n  if(d!=null){\r\n    setIsdrAuthorized(true);\r\n  }\r\n  if(d!=null){\r\n    setIsdrAuthorized(true);\r\n  }\r\n},[])\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n        <Switch>\r\n          <div className=\"container\">\r\n\r\n            \r\n\r\n          <Route exact path=\"/\"><Redirect to=\"/client\"/></Route>\r\n          \r\n            <Route path='/client' render={() => {\r\n\r\n              return (isAuthorized ? <SideBar authorized={isAuthorized} setIsAuthorized={setIsAuthorized} /> :\r\n              <Signin setIsAuthorized={setIsAuthorized} />)\r\n            }} />\r\n\r\n           \r\n\r\n            <Route   path='/docsignin' render={() => {\r\n\r\n              return (isdrAuthorized ? <DoctorDashboard authorized={isdrAuthorized} setIsdrAuthorized={setIsdrAuthorized} /> :\r\n                <DocSignin setIsdrAuthorized={setIsdrAuthorized} />)\r\n            }} />\r\n            <Route exact path='/signup' component={Signup} />\r\n            <Route exact path='/forgotpassword' component={ForgotPassword} />\r\n            <Route exact path='/docsignup' component={DocSignUp} />\r\n            {/* <Route path='/docdashboard' component={()=>{return <DoctorDashboard authorized={isAuthorized}/>}} /> */}\r\n       \r\n\r\n          </div>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}