{"version":3,"sources":["commons/constants.js","components/UpdateSpecialityModal.jsx","pages/Specialities.jsx","components/VerificationModal.jsx","pages/Doctors.jsx","pages/Patients.jsx","pages/AddSpeciality.jsx","pages/DocSignUp.jsx","pages/BloodBank.jsx","pages/AddBloodBank.jsx","pages/DocSearchResult.jsx","pages/Slots.jsx","pages/AddSlot.jsx","components/Navbar.jsx","pages/AdminLogin.jsx","pages/ForgotPassword.jsx","App.js","index.js"],"names":["url","UpdateSpecialityModal","item","closeModal","useState","spec_description","setSpec_description","undefined","spec_icon","setSpec_icon","history","useHistory","className","tabindex","id","spName","spId","type","onClick","htmlFor","value","disabled","name","placeholder","spDescription","rows","onChange","e","target","files","preventDefault","data","FormData","append","window","confirm","axios","put","then","response","status","alert","push","Specialities","allSpecialities","setAllSpecialities","showModal","setShowModal","specObj","setSpecObj","useEffect","getAllSpecialities","get","result","console","log","style","float","scope","map","index","src","spIcon","height","width","delete","VerificationModal","docName","docRegistrationNo","docVerificationDoc","minHeight","minWidth","Doctors","searchQuery","setsearchQuery","allDoctors","setAllDoctors","docState","setdocState","getAllDoctors","to","marginLeft","toggleisVerifiedStatus","docId","docIsOnline","class","speciality","docCity","docPhone","docExperience","docDescription","docFees","email","docProfilePic","alt","docIsVerified","Patients","allPatients","setAllPatients","getAllPatients","patId","patName","patGender","patPhone","patDob","patDescription","AddSpeciality","spec_name","setSpec_name","align","required","Axios","post","DocSignUp","allspecs","setAllSpec","validEmail","RegExp","validPassword","d_name","set_d_name","sp_id","set_sp_id","d_city","set_d_city","d_phone","set_d_phone","d_exp","set_d_exp","d_registeration_no","set_d_registeration_no","d_description","set_d_description","d_verification_doc","set_d_verification_doc","d_profile_pic","set_d_profile_pic","d_fees","set_d_fees","set_email","password","set_password","getAllSpecs","for","selected","HtmlFor","cols","classNameName","borderStyle","borderColor","opacity","borderRadius","padding","length","test","error","BloodBank","allBloodBank","setAllBloodBank","getAllBloodBanks","bbId","bbName","bbEmail","bbPhone","bbAddress","bbCity","AddBloodBank","bb_Name","setBbName","bb_Phone","setBbPhone","bb_Address","setBbAddress","bb_Email","setBbEmail","bb_City","setBbCity","DocSearchResult","props","search","useLocation","queryvalues","queryString","parse","query","textAlign","marginBottom","sp_name","Slots","allSlots","setAllSlots","getAllSlots","slotId","slotTime","AddSlot","setSlotTime","Navbar","authorized","setIsAuthorized","role","localStorage","clear","exact","path","component","Signin","emailLogin","setemailLogin","passwordLogin","setpasswordLogin","defaults","withCredentials","setItem","JSON","stringify","ForgotPassword","setEmail","setPassword","confirmPassword","setConfirmPassword","encOTP","setEncOTP","userOtp","setUserOtp","isOtpSent","setIsOtpSent","body","otp","parseInt","App","isAuthorized","getItem","basename","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.900d58fa.chunk.js","sourcesContent":[" export const url = 'http://localhost:8080'\r\n\r\n// export const url = 'http://ec2-3-82-241-114.compute-1.amazonaws.com:8080'","import { React, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { url } from './../commons/constants';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction UpdateSpecialityModal({ item, closeModal }) {\r\n    const [spec_description, setSpec_description] = useState('');\r\n    const [spec_icon, setSpec_icon] = useState(undefined);\r\n    const history = useHistory()\r\n\r\n    const updateSpeciality = (e) => {\r\n        e.preventDefault()\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('spId', item.spId);\r\n        data.append('spName', item.spName);\r\n        data.append('spDescription', spec_description);\r\n        data.append('spIcon', spec_icon);\r\n        const r = window.confirm(\"Please confirm the currently entered fields of (#\"+item.spId+\") \"+item.spName+\".\\nProceed to update ?\");\r\n        if(r){\r\n            axios.put(url + '/admin/speciality', data).then((response) => {\r\n                const result = response.data\r\n                if(result.status === 'success'){\r\n                    window.alert('speciality updated successfully !')\r\n                    closeModal(false)\r\n                    history.push('/specialities')\r\n                    // return <Redirect to='/specialities'/>\r\n                }else{\r\n                    window.alert('Failed to update Speciality: '+item.spName)\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" tabindex=\"-1\" aria-hidden=\"false\" id=\"UpdateSpecialityModal\" aria-labelledby=\"UpdateSpecialityModalLabel\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\" id=\"UpdateSpecialityModalLabel\">Update Speciality : {item.spName} </h4>\r\n                        <h6>Spec Id: <b>{item.spId}</b></h6>\r\n                        <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => {\r\n                            closeModal(false)\r\n                        }}>X</button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"specialityName\">Speciality Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"specialityName\" value={item.spName} disabled/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"specialityDescription\">Speciality Description</label>\r\n                            <textarea name=\"\" id=\"specialityDescription\" className=\"form-control\" placeholder={item.spDescription} rows=\"3\" onChange={(e) => {\r\n                                setSpec_description(e.target.value)\r\n                            }}></textarea>\r\n                        </div>\r\n\r\n                        <hr />\r\n                        <div className=\"form-group mt-3\">\r\n                            <label className=\"mr-2\">Upload Speciality Icon:</label>\r\n                            <input type=\"file\" onChange={(e) => {\r\n                                setSpec_icon(e.target.files[0])\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-success btn-sm\" data-bs-dismiss=\"modal\" onClick={updateSpeciality}>Update</button>\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" data-bs-dismiss=\"modal\" onClick={() => {\r\n                            closeModal(false)\r\n                        }}>Close</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateSpecialityModal\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { url } from '../commons/constants'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom';\r\nimport UpdateSpecialityModal from './../components/UpdateSpecialityModal';\r\n\r\n\r\nfunction Specialities() {\r\n    const [allSpecialities, setAllSpecialities] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [specObj, setSpecObj] = useState('');\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/addspeciality';\r\n        history.push(path);\r\n    }\r\n    useEffect(() => {\r\n        getAllSpecialities();\r\n    }, [])\r\n\r\n    const getAllSpecialities = () => {\r\n        axios.get(url + '/admin/findSpecialities').then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                console.log(result.data)\r\n                setAllSpecialities(result.data)\r\n            } else {\r\n                alert(\"Error fetching in Specialities Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"columns\">\r\n                    <div className=\"four-fifth column center-text\">\r\n                        <h3>All Specialities</h3>\r\n                    </div>\r\n                    <div className=\"one-fifths column \">\r\n                        <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={routeChange}>Add New Speciality</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table className=\"table table-striped table-hover table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Speciality Name</th>\r\n                        <th scope=\"col\">Icon</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Action</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allSpecialities.map((item, index) => {\r\n                        const deleteSpeciality = () => {\r\n                            const r = window.confirm(\"Do you really want to delete Speciality (#\" + item.spId + \") \" + item.spName + \" ?\");\r\n                            if (r) {\r\n                                axios.delete(url + '/admin/speciality/' + item.spId).then((response) => {\r\n                                    const result = response.data\r\n                                    if (result.status === 'success') {\r\n                                        getAllSpecialities();\r\n                                    } else {\r\n                                        window.alert(item.spName + ' cannot be deleted !')\r\n                                    }\r\n\r\n                                })\r\n\r\n                            }\r\n                        }\r\n\r\n                        return (\r\n                            <tr key={index}>\r\n                                {/* <th scope=\"row\">1</th> */}\r\n                                <td>{item.spId}</td>\r\n                                <td>{item.spName}</td>\r\n                                <td><img src={url + '/' + item.spIcon} style={{ height: \"50px\", width: \"50px\" }} /></td>\r\n                                <td>{item.spDescription}</td>\r\n                                {/* TODO: Update speciality */}\r\n                                <td><button className=\"btn btn-warning\" data-bs-toggle=\"modal\" data-bs-target=\"#UpdateSpecialityModal\" onClick={() => {\r\n                                    setShowModal(true);\r\n                                    setSpecObj(item);\r\n                                }}>Update</button></td>\r\n                                <td><button className=\"btn btn-danger\" onClick={deleteSpeciality}>Remove</button></td>\r\n                                {showModal && <UpdateSpecialityModal item={specObj} closeModal={setShowModal} />}\r\n                            </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Specialities\r\n","import React from 'react'\r\nimport { url } from '../commons/constants'\r\n\r\n\r\nfunction VerificationModal({ item, closeModal }) {\r\n    return (\r\n        <div className=\"modal fade\" tabindex=\"-1\" aria-hidden=\"false\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\">\r\n            <div className=\"modal-dialog modal-dialog-scrollable modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\" id=\"exampleModalLabel\">Verification document for Dr.{item.docName} </h4> \r\n                        <h6>Registration no. <b>{item.docRegistrationNo}</b></h6>\r\n                        <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => {\r\n                            closeModal(false)\r\n                        }}>X</button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <embed src={url + \"/\" + item.docVerificationDoc} style={{minHeight:'70vh',minWidth:'100%'}}/>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\" onClick={() => {\r\n                            closeModal(false)\r\n                        }}>Close</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerificationModal\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../commons/constants\";\r\nimport \"./Doctors.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VerificationModal from \"../components/VerificationModal\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nfunction Doctors() {\r\n    const [searchQuery, setsearchQuery] = useState(\"\");\r\n    const [allDoctors, setAllDoctors] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [docState, setdocState] = useState(\"\");\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = \"/addDoctor\";\r\n        history.push(path);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllDoctors();\r\n    }, []);\r\n\r\n    const getAllDoctors = () => {\r\n        axios.get(url + \"/admin/doctors\").then((response) => {\r\n            const result = response.data;\r\n            if (result.status === \"success\") {\r\n                setAllDoctors(result.data);\r\n            } else {\r\n                alert(\"Error fetching in Doctor's Data...!!!\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"columns\">\r\n                <div className=\"four-fifth column center-text\">\r\n                    <h3>Doctors Data</h3>\r\n                </div>\r\n                <div>\r\n                    <div className=\"four-fifths column \">\r\n                        <div className=\"row d-flex justify-content-center mt-50\">\r\n                            <div className=\"col-md-4\">\r\n                                <form className=\"flex-nowrap col ml-auto footer-subscribe p-0\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        onChange={(e) => {\r\n                                            setsearchQuery(e.target.value);\r\n                                        }}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Search by name\"\r\n                                    />\r\n                                    <Link to ={`/docsearchresult?query=${searchQuery}`}>\r\n                                    <button className=\"btn btn-theme bg-orange\">\r\n                                        <FaSearch />\r\n                                    </button></Link>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"one-fifths column \">\r\n                        <Link to=\"/addDoctor\">\r\n                            <button\r\n                                className=\"btn btn-success\"\r\n                                style={{ float: \"right\" }}\r\n                                onClick={routeChange}\r\n                            >\r\n                                Add New Doctor\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <h3>Doctors Data</h3>\r\n            <div className=\"align\">\r\n                <button className=\"btn btn-success\">Add New Doctor</button>\r\n            </div> */}\r\n            <div className=\"container-fluid\">\r\n                <table\r\n                    className=\"table table-striped table-hover table-sm text-center\"\r\n                    style={{ marginLeft: \"-170px\", minWidth: \"100%\" }}\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Active status</th>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Speciality</th>\r\n                            <th scope=\"col\">City</th>\r\n                            <th scope=\"col\">Contact</th>\r\n                            <th scope=\"col\">Experience in year(s)</th>\r\n                            <th scope=\"col\">Registration No.</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Fees</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Profile Pic</th>\r\n                            <th scope=\"col\">Verification Docs</th>\r\n                            <th scope=\"col\">Action</th>\r\n                            <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allDoctors.map((item, index) => {\r\n                            const toggleisVerifiedStatus = () => {\r\n                                axios\r\n                                    .put(url + \"/admin/verifydoc/\" + item.docId)\r\n                                    .then((response) => {\r\n                                        const result = response.data;\r\n                                        if (result.status === \"success\") {\r\n                                            window.alert(\r\n                                                \"Verification status for Dr. \" +\r\n                                                item.docName +\r\n                                                \" Successfully updated !\"\r\n                                            );\r\n                                            getAllDoctors();\r\n                                        } else {\r\n                                            window.alert(\"updating verification status Failed!\");\r\n                                        }\r\n                                    });\r\n                            };\r\n\r\n                            const deleteDoctor = () => {\r\n                                const r = window.confirm(\r\n                                    \"Do you really want to delete Doctor (#\" +\r\n                                    item.docId +\r\n                                    \") Dr. \" +\r\n                                    item.docName +\r\n                                    \" ?\"\r\n                                );\r\n                                if (r) {\r\n                                    axios\r\n                                        .delete(url + \"/admin/deletedoc/\" + item.docId)\r\n                                        .then((response) => {\r\n                                            const result = response.data;\r\n                                            if (result.status === \"success\") {\r\n                                                getAllDoctors();\r\n                                            } else {\r\n                                                window.alert(\r\n                                                    \"Problem occured... Dr. \" +\r\n                                                    item.docName +\r\n                                                    \" cannot be deleted !\"\r\n                                                );\r\n                                            }\r\n                                        });\r\n                                }\r\n                            };\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>\r\n                                        {item.docIsOnline ? (\r\n                                            <span class=\"badge bg-success\">Online</span>\r\n                                        ) : (\r\n                                            <span class=\"badge bg-secondary\">Offline</span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>{item.docId}</td>\r\n                                    <td>{item.docName}</td>\r\n                                    <td>{item.speciality.spName}</td>\r\n                                    <td>{item.docCity}</td>\r\n                                    <td>{item.docPhone}</td>\r\n                                    <td>{item.docExperience}</td>\r\n                                    <td>{item.docRegistrationNo}</td>\r\n                                    <td>{item.docDescription}</td>\r\n                                    <td>{item.docFees}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>\r\n                                        <img\r\n                                            src={url + \"/\" + item.docProfilePic}\r\n                                            alt={item.docName}\r\n                                            style={{ height: \"70px\", width: \"70px\" }}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-warning\"\r\n                                            data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#exampleModal\"\r\n                                            onClick={() => {\r\n                                                setShowModal(true);\r\n                                                setdocState(item);\r\n                                            }}\r\n                                        >\r\n                                            View Doc\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.docIsVerified ? (\r\n                                            <button\r\n                                                id=\"validate\"\r\n                                                className=\"btn btn-sm btn-danger\"\r\n                                                onClick={toggleisVerifiedStatus}\r\n                                            >\r\n                                                InValidate\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                id=\"validate\"\r\n                                                className=\"btn btn-sm btn-success\"\r\n                                                onClick={toggleisVerifiedStatus}\r\n                                            >\r\n                                                Validate\r\n                                            </button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-danger\"\r\n                                            onClick={deleteDoctor}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n\r\n                                    {showModal && (\r\n                                        <VerificationModal\r\n                                            item={docState}\r\n                                            closeModal={setShowModal}\r\n                                        />\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctors;\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { url } from '../commons/constants'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Patients() {\r\n\r\n    const [allPatients, setAllPatients] = useState([])\r\n\r\n    useEffect(() => {\r\n        getAllPatients();\r\n    }, [])\r\n\r\n    const getAllPatients = () => {\r\n        axios.get(url + '/admin/patients').then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setAllPatients(result.data)\r\n            } else {\r\n                alert(\"Error fetching in Patients Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"columns\">\r\n                    <div className=\"four-fifth column center-text\">\r\n                        <h3>Patients List</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table className=\"table table-striped table-hover table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Gender</th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">DateOfBirth</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allPatients.map((item, index) => {\r\n                        const deletePatient = () => {\r\n                            const r = window.confirm(\"Do you really want to delete Patient (#\" + item.patId + \") \" + item.patName + \" ?\");\r\n                            if (r) {\r\n                                axios.delete(url + '/admin/patients/' + item.patId).then((response) => {\r\n                                    const result = response.data\r\n                                    if (result.status === 'success') {\r\n                                        getAllPatients();\r\n                                    } else {\r\n                                        window.alert(item.patName + ' cannot be deleted !')\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{item.patId}</td>\r\n                                <td>{item.patName}</td>\r\n                                <td>{item.patGender}</td>\r\n                                <td>{item.patPhone}</td>\r\n                                <td>{item.patDob}</td>\r\n                                <td>{item.patDescription}</td>\r\n                                <td>{item.email}</td>\r\n                                <td><button className=\"btn btn-danger btn-sm\" onClick={deletePatient}>Delete</button></td>\r\n                            </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Patients\r\n","import React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { url } from '../commons/constants';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction AddSpeciality() {\r\n    const [spec_name, setSpec_name] = useState('')\r\n    const [spec_description, setSpec_description] = useState('');\r\n    const [spec_icon, setSpec_icon] = useState(undefined);\r\n    const history = useHistory();\r\n\r\n    const addSpecialityToDB = (e) =>{\r\n        e.preventDefault()\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('spName', spec_name);\r\n        data.append('spDescription', spec_description);\r\n        data.append('spIcon', spec_icon);\r\n\r\n        Axios.post(url+'/admin/speciality', data).then((response) => {\r\n            console.log(response.status)\r\n            console.log(response.data)\r\n            window.alert('New Speciality is successfully added !')\r\n            history.push(\"/specialities\")\r\n            // if(response.status === 'success'){\r\n            // }else{\r\n            //     window.alert('problem in adding new speciality !')\r\n            // }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <div className=\"col-md-6 offset-md-3 mt-5\">\r\n                   <h2 align='center'>Add a new Speciality</h2>\r\n                   <hr />\r\n                   <br/>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"specialityName\">Seciality Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"specialityName\" placeholder=\"Enter new Speciality name\" required=\"required\" onChange={(e) =>{\r\n                            setSpec_name(e.target.value)\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"specialityDescription\">Speciality Description</label>\r\n                        <textarea name=\"\" id=\"specialityDescription\" className=\"form-control\" placeholder=\"Some description about the speciality here\" rows=\"3\" onChange={(e) =>{\r\n                            setSpec_description(e.target.value)\r\n                        }}></textarea>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group mt-3\">\r\n                        <label className=\"mr-2\">Upload Speciality Icon:</label>\r\n                        <input type=\"file\" onChange={(e) =>{\r\n                            setSpec_icon(e.target.files[0])\r\n                        }}/>\r\n                    </div>\r\n                    <hr />\r\n                    \r\n                        <button type= \"button\" className=\"btn btn-success col-md-6 offset-md-3\" onClick={addSpecialityToDB}>Add Speciality</button>\r\n                   \r\n\r\n                </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddSpeciality\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n// import { Stepper , Step } from 'react-form-stepper';\r\nimport Axios from 'axios'\r\nimport axios from 'axios'\r\nimport { url } from '../commons/constants.js'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction DocSignUp() {\r\n\r\n    //For speciality drop down\r\n    const [allspecs, setAllSpec] = useState([])\r\n    let history = useHistory()\r\n\r\n    const validEmail = new RegExp(\r\n        '.+\\@.+\\..+'\r\n    );\r\n\r\n    const validPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\r\n    // for Doc Sign up\r\n    const [d_name, set_d_name] = useState('')\r\n    const [sp_id, set_sp_id] = useState(0)\r\n    const [d_city, set_d_city] = useState('')\r\n    const [d_phone, set_d_phone] = useState('')\r\n    const [d_exp, set_d_exp] = useState(0)\r\n    const [d_registeration_no, set_d_registeration_no] = useState('')\r\n    const [d_description, set_d_description] = useState('')\r\n    const [d_verification_doc, set_d_verification_doc] = useState(undefined)\r\n    const [d_profile_pic, set_d_profile_pic] = useState(undefined)\r\n    const [d_fees, set_d_fees] = useState(0.0)\r\n    const [email, set_email] = useState('')\r\n    const [password, set_password] = useState('')\r\n\r\n    useEffect(() => {\r\n        getAllSpecs();\r\n    }, [])\r\n\r\n    const getAllSpecs = () => {\r\n        axios.get(url + '/admin/findSpecialities').then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                console.log(result.data)\r\n                setAllSpec(result.data)\r\n            } else {\r\n                alert(\"Error fetching in Specialities Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // Axios.defaults.withCredentials = true\r\n    const docRegister = (e) => {\r\n        if (d_name.length === 0) {\r\n            alert('please enter Name')\r\n        }\r\n        else if (sp_id === 0) {\r\n            alert('please select Speciality')\r\n        }\r\n        else if (d_city.length === 0) {\r\n            alert('please enter City')\r\n        }\r\n        else if (d_phone.length !== 10) {\r\n            alert('phone number should be of 10 digits')\r\n        }\r\n        else if (d_exp === 0) {\r\n            alert('please enter Experience (in years)')\r\n        }\r\n        else if (d_registeration_no.length === 0) {\r\n            alert('please enter Registration number')\r\n        }\r\n        else if (d_verification_doc === undefined) {\r\n            alert('please upload verification document')\r\n        }\r\n        else if (d_profile_pic === undefined) {\r\n            alert('please upload profile pic')\r\n        }\r\n        else if (d_fees.length === 0) {\r\n            alert('please enter fees')\r\n        }\r\n        else if (email.length === 0) {\r\n            alert('Email field cannot be empty')\r\n        } else if (!validEmail.test(email)) {\r\n            alert('Please Enter a valid Email')\r\n        }\r\n        else if (password.length === 0) {\r\n            alert('Password Field cannot be Empty.')\r\n        } else if (!validPassword.test(password)) {\r\n            alert(' password must contain 1 number (0-9)\\n password must contain 1 uppercase letters \\n password must contain 1 lowercase letters \\n password must contain 1 non-alpha numeric number (#?!@$%^&*-) \\n password must be of more than 8 characters with no space')\r\n        }\r\n        else {\r\n            e.preventDefault()\r\n            const data = new FormData();\r\n\r\n            data.append('docName', d_name);\r\n            data.append('spId', sp_id);\r\n            data.append('docCity', d_city);\r\n            data.append('docPhone', d_phone);\r\n            data.append('docExperience', d_exp);\r\n            data.append('docRegistrationNo', d_registeration_no);\r\n            data.append('docDescription', d_description);\r\n            data.append('docVerificationDoc', d_verification_doc);\r\n            data.append('docProfilePic', d_profile_pic);\r\n            data.append('docFees', d_fees);\r\n            data.append('email', email);\r\n            data.append('password', password);\r\n\r\n\r\n            // for (var key of data.entries()) {\r\n            //     console.log(key[0] + ', ' + key[1]);\r\n            // }\r\n            // Chnages to be made for FormData from JSON Data\r\n            try {\r\n                Axios.post(url + '/doctor', data).then((response) => {\r\n                    const result = response.data;\r\n                    if (result.status === \"success\") {\r\n                        console.log(response.status);\r\n                        console.log(response.data);\r\n                        window.alert('Hey! you are Successfully registered at Clinic-on-click');\r\n                        history.push('/doctors')\r\n                    } else {\r\n                        window.alert('Registeration Failed..')\r\n                        history.push('/addDoctor')\r\n                    }\r\n                })\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <h1 align=\"center\">Add a new Doctor from Admin side</h1>\r\n                <br />\r\n                {/* <Stepper\r\n                    steps={[{ label: 'Step 1' }, { label: 'Step 2' }, { label: 'Step 3' }]}\r\n                    activeStep={1}\r\n                /> */}\r\n                <form>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col\">\r\n                            <label for=\"d_name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" required=\"required\" placeholder=\"Enter Doctor's name\" aria-label=\"First name\"\r\n                                onChange={(e) => {\r\n                                    set_d_name(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label for=\"inputState\" className=\"form-label\">Choose your Speciality Id</label>\r\n                            <select className=\"form-control\" aria-label=\".form-select-sm example\" onChange={(e) => {\r\n                                set_sp_id(e.target.value)\r\n                            }}>\r\n                                <option selected>Choose</option>\r\n                                {allspecs.map((item, index) => {\r\n                                    return (\r\n                                        <option key={index} value={item.spId}>{item.spName}</option>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputEmail4\" className=\"form-label\">Registeration No</label>\r\n                            <input type=\"text\" required=\"required\" className=\"form-control\" placeholder=\"Enter doctor registration number\" onChange={(e) => {\r\n                                set_d_registeration_no(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label for=\"inputCity\" className=\"form-label\">Experience</label>\r\n                            <input type=\"text\" className=\"form-control\" onChange={(e) => {\r\n                                set_d_exp(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Phone</label>\r\n                            <input type=\"text\" required=\"required\" placeholder=\"Enter Phone number\" className=\"form-control\"\r\n                                onChange={(e) => {\r\n                                    set_d_phone(e.target.value)\r\n                                }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputCity\" className=\"form-label\">City</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter city\" onChange={(e) => {\r\n                                set_d_city(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Fees</label>\r\n                            <input type=\"number\" className=\"form-control\" placeholder=\"Enter Fees\" onChange={(e) => {\r\n                                set_d_fees(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label HtmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                            <textarea className=\"form-control\" rows=\"3\" cols=\"55\" placeholder=\"Enter some description about doctor\" id=\"exampleFormControlTextarea1\"  onChange={(e) => {\r\n                                set_d_description(e.target.value)\r\n                            }}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputEmail4\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" required=\"required\" placeholder=\"Enter doctor's email\" onChange={(e) => {\r\n                                set_email(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label HtmlFor=\"inputPassword4\" className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" required=\"required\" placeholder=\"Enter new password\" onChange={(e) => {\r\n                                set_password(e.target.value)\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div classNameName=\"row\" style={{ borderStyle: \"groove\", borderColor: \"#CED4DA\", opacity: \"0.5\", borderRadius: \"5px\", padding: \"10px\" }}>\r\n                                <label HtmlFor=\"inputEmail4\" className=\"form-label\">Upload Profile Pic</label>\r\n                                {/* <label for=\"exampleFormControlFile1\">Example file input</label> */}\r\n\r\n                                <input type=\"file\" className=\"form-control-file\" onChange={(e) => {\r\n                                    set_d_profile_pic(e.target.files[0])\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"row\" style={{ borderStyle: \"groove\", borderColor: \"#CED4DA\", opacity: \"0.5\", borderRadius: \"5px\", padding: \"10px\" }}>\r\n                                <label HtmlFor=\"inputEmail4\" className=\"form-label\">Upload Verification Doc</label>\r\n                                {/* <label for=\"exampleFormControlFile1\">Example file input</label> */}\r\n                                <input type=\"file\" className=\"form-control-file\" required=\"required\"\r\n                                    onChange={(e) => {\r\n                                        set_d_verification_doc(e.target.files[0])\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {/* need to solve routing issues */}\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={docRegister}>Register Here</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DocSignUp\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../commons/constants\";\r\nimport \"./BloodBank.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction BloodBank() {\r\n    const [allBloodBank, setAllBloodBank] = useState([])\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/bloodbank';\r\n        history.push(path);\r\n    }\r\n    useEffect(() => {\r\n        getAllBloodBanks();\r\n    }, [])\r\n\r\n    const getAllBloodBanks = () => {\r\n        axios.get(url + '/bloodbank').then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setAllBloodBank(result.data)\r\n            }else {\r\n                alert(\"Error fetching in BloodBank's Data...!!!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = \"columns\">\r\n                <div className=\"four-fifth column center-text\">\r\n                    <h3>BloodBank's List</h3>\r\n                </div>\r\n                <div className=\"one-fifths column\">\r\n                    <Link to=\"/addbloodbank\">\r\n                        <button className=\"btn btn-success\" style={{ float: \"right\" }} onClick={routeChange}>Add New BloodBank</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <table className=\"table table-striped table-hower table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Address</th>\r\n                        <th scope=\"col\">City</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allBloodBank.map((item, index) => {\r\n                        const deleteBloodBank =()=> {\r\n                        const t = window.confirm(\"Do you really want to delete BloodBank (#\" + item.bbId +\") \" + item.bbName + \" ?\");\r\n                        if(t) {\r\n                            axios.delete( url + '/bloodbank/'+ item.bbId).then((response) => {\r\n                                const result = response.data\r\n                                if (result.status === 'success') {\r\n                                    getAllBloodBanks();\r\n                                }else {\r\n                                    window.alert('Problem occured... BloodBank ' + item.bbName + ' cannot be deleted ! ')\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return( \r\n                        <tr key={index}>\r\n                            <td>{item.bbId}</td>\r\n                            <td>{item.bbName}</td>\r\n                            <td>{item.bbEmail}</td>\r\n                            <td>{item.bbPhone}</td>\r\n                            <td>{item.bbAddress}</td>\r\n                            <td>{item.bbCity}</td>\r\n                            <td><button className=\"btn btn-sm btn-danger\" onClick={deleteBloodBank}>Delete</button></td>\r\n\r\n                        </tr>)\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BloodBank","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { url } from '../commons/constants';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddBloodBank() {\r\n    var history = useHistory();\r\n    const [bb_Name, setBbName] = useState('');\r\n    const [bb_Phone, setBbPhone] = useState('');\r\n    const [bb_Address, setBbAddress] = useState('');\r\n    const [bb_Email, setBbEmail] = useState('');\r\n    const [bb_City, setBbCity] = useState('');\r\n\r\n    const addBloodBank = (e) => {\r\n        e.preventDefault()\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('bbName', bb_Name);\r\n        data.append('bbPhone', bb_Phone);\r\n        data.append('bbAddress', bb_Address);\r\n        data.append('bbEmail', bb_Email);\r\n        data.append('bbCity', bb_City);\r\n\r\n        axios.post( url + '/bloodbank', data ).then((response) => {\r\n            const result = response.data;\r\n            if(result.status === 'success'){\r\n                console.log(result.status);\r\n                console.log(result.data);\r\n                window.alert('New BloodBank is Added to  databases !')\r\n                history.push('/bloodbank');\r\n            }else{\r\n                window.alert('Failed to add New BloodBank')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-6 offset-md-3 mt-3\">\r\n                <h2 align='center'>Add a new Blood Bank</h2>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"bloodbankName\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"bloodbankName\" placeholder=\"Enter BloodBank Name\" required=\"required\" onChange={(e) => {\r\n                            setBbName(e.target.value)\r\n                        }}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"bloodbankPhone\">Contact Number</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"bloodbankPhone\" placeholder=\"Enter BloodBank Contact Number\" required=\"required\" onChange={(e) => {\r\n                            setBbPhone(e.target.value)\r\n                        }}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"bloodbankEmail\">Email ID</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"bloodbankEmail\" placeholder=\"Enter BloodBank Email Id\" required=\"required\" onChange={(e) => {\r\n                            setBbEmail(e.target.value)\r\n                        }}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"bloodbankAddress\">Address</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"bloodbankAddress\" placeholder=\"Enter BloodBank Address\" required=\"required\" onChange={(e) => {\r\n                            setBbAddress(e.target.value)\r\n                        }}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"bloodbankCity\">City</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"bloodbankCity\" placeholder=\"Enter BloodBank City\" required=\"required\" onChange={(e) => {\r\n                            setBbCity(e.target.value)\r\n                        }}/>\r\n                </div>\r\n                <hr/>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={addBloodBank}>Add BloodBank</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBloodBank","import React from 'react'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../commons/constants\";\r\nimport \"./Doctors.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VerificationModal from \"../components/VerificationModal\";\r\n\r\n\r\nfunction DocSearchResult(props) {\r\n    const { search } = useLocation()\r\n    const queryvalues = queryString.parse(search)\r\n\r\n    const [allDoctors, setAllDoctors] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [docState, setdocState] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        getAllDoctors();\r\n    }, []);\r\n\r\n    const getAllDoctors = () => {\r\n        axios.get(url + \"/doctor/searchname?q=\" + queryvalues.query).then((response) => {\r\n            const result = response.data;\r\n            if (result.status === 'success') {\r\n                setAllDoctors(result.data);\r\n            } else {\r\n                alert(\"Error fetching in Doctor's Data...!!!\");\r\n            }\r\n        });\r\n    };\r\n    console.log(allDoctors)\r\n    return (\r\n        <div>\r\n            <div className=\"columns\">\r\n            <div style={{ textAlign: 'left' , marginBottom:\"20px\"}}>\r\n                            <Link to=\"/\">\r\n                            <button type=\"button\" class=\"btn btn-warning\">Go Back Doctors</button>\r\n                            </Link>\r\n                        </div>     \r\n                <div className=\"four-fifth column center-text\">\r\n                    <h3>Showing search results for doctor name : \"{queryvalues.query}\"</h3>\r\n                </div>\r\n                <div>\r\n                    <div className=\"four-fifths column \">\r\n                        \r\n                    </div>\r\n            \r\n                </div>\r\n            </div>\r\n\r\n            {/* <h3>Doctors Data</h3>\r\n            <div className=\"align\">\r\n                <button className=\"btn btn-success\">Add New Doctor</button>\r\n            </div> */}\r\n            <div className=\"container-fluid\">\r\n                <table\r\n                    className=\"table table-striped table-hover table-sm text-center\"\r\n                    style={{ marginLeft: \"-170px\", minWidth: \"100%\" }}\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Active status</th>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Speciality</th>\r\n                            <th scope=\"col\">City</th>\r\n                            <th scope=\"col\">Contact</th>\r\n                            <th scope=\"col\">Experience in year(s)</th>\r\n                            <th scope=\"col\">Registration No.</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Fees</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Profile Pic</th>\r\n                            <th scope=\"col\">Verification Docs</th>\r\n                            <th scope=\"col\">Action</th>\r\n                            <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allDoctors.map((item, index) => {\r\n                            const toggleisVerifiedStatus = () => {\r\n                                axios\r\n                                    .put(url + \"/admin/verifydoc/\" + item.docId)\r\n                                    .then((response) => {\r\n                                        const result = response.data;\r\n                                        if (result.status === \"success\") {\r\n                                            window.alert(\r\n                                                \"Verification status for Dr. \" +\r\n                                                item.docName +\r\n                                                \" Successfully updated !\"\r\n                                            );\r\n                                            getAllDoctors();\r\n                                        } else {\r\n                                            window.alert(\"updating verification status Failed!\");\r\n                                        }\r\n                                    });\r\n                            };\r\n\r\n                            const deleteDoctor = () => {\r\n                                const r = window.confirm(\r\n                                    \"Do you really want to delete Doctor (#\" +\r\n                                    item.docId +\r\n                                    \") Dr. \" +\r\n                                    item.docName +\r\n                                    \" ?\"\r\n                                );\r\n                                if (r) {\r\n                                    axios\r\n                                        .delete(url + \"/admin/deletedoc/\" + item.docId)\r\n                                        .then((response) => {\r\n                                            const result = response.data;\r\n                                            if (result.status === \"success\") {\r\n                                                getAllDoctors();\r\n                                            } else {\r\n                                                window.alert(\r\n                                                    \"Problem occured... Dr. \" +\r\n                                                    item.docName +\r\n                                                    \" cannot be deleted !\"\r\n                                                );\r\n                                            }\r\n                                        });\r\n                                }\r\n                            };\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>\r\n                                        {item.docIsOnline ? (\r\n                                            <span class=\"badge bg-success\">Online</span>\r\n                                        ) : (\r\n                                            <span class=\"badge bg-secondary\">Offline</span>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>{item.docId}</td>\r\n                                    <td>{item.docName}</td>\r\n                                    <td>{item.sp_name}</td>\r\n                                    <td>{item.docCity}</td>\r\n                                    <td>{item.docPhone}</td>\r\n                                    <td>{item.docExperience}</td>\r\n                                    <td>{item.docRegistrationNo}</td>\r\n                                    <td>{item.docDescription}</td>\r\n                                    <td>{item.docFees}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>\r\n                                        <img\r\n                                            src={url + \"/\" + item.docProfilePic}\r\n                                            alt={item.docName}\r\n                                            style={{ height: \"70px\", width: \"70px\" }}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-warning\"\r\n                                            data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#exampleModal\"\r\n                                            onClick={() => {\r\n                                                setShowModal(true);\r\n                                                setdocState(item);\r\n                                            }}\r\n                                        >\r\n                                            View Doc\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.docIsVerified ? (\r\n                                            <button\r\n                                                id=\"validate\"\r\n                                                className=\"btn btn-sm btn-danger\"\r\n                                                onClick={toggleisVerifiedStatus}\r\n                                            >\r\n                                                InValidate\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                id=\"validate\"\r\n                                                className=\"btn btn-sm btn-success\"\r\n                                                onClick={toggleisVerifiedStatus}\r\n                                            >\r\n                                                Validate\r\n                                            </button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-danger\"\r\n                                            onClick={deleteDoctor}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n\r\n                                    {showModal && (\r\n                                        <VerificationModal\r\n                                            item={docState}\r\n                                            closeModal={setShowModal}\r\n                                        />\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocSearchResult\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { url } from './../commons/constants';\r\n\r\nfunction Slots() {\r\n    const [allSlots, setAllSlots] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllSlots();\r\n    }, []);\r\n\r\n    const getAllSlots = () => {\r\n        axios.get(url + '/admin/slots').then((response)=>{\r\n            const result = response.data\r\n            if(result.status ==='success'){\r\n                setAllSlots(result.data);\r\n            }else{\r\n                window.alert('problem occurred during fetching Slots data')\r\n            }\r\n        })\r\n    };\r\n    return (\r\n        <div>\r\n             <div className=\"col\">\r\n                <div className=\"four-fifth column center-text\">\r\n                    <h3>All Slots</h3>\r\n                </div>\r\n                <div>\r\n                    <div className=\"one-fifths column \">\r\n                        <Link to=\"/addslot\">\r\n                            <button\r\n                                className=\"btn btn-success\"\r\n                                style={{ float: \"right\" }}>\r\n                                Add New Slot\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n          \r\n            <div className=\"container\">\r\n                <table\r\n                    className=\"table table-striped table-hover table-sm text-center\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Slot time</th>\r\n                            \r\n                            <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allSlots.map((item, index) => {\r\n                    \r\n                            const deleteSlot = () => {\r\n                                const r = window.confirm(\r\n                                    \"Do you really want to delete Slot (#\" +\r\n                                    item.slotId +\r\n                                    \") Dr. \" +\r\n                                    item.slotTime +\r\n                                    \" ?\"\r\n                                );\r\n                                if (r) {\r\n                                    axios\r\n                                        .delete(url + \"/admin/slot/\" + item.slotId)\r\n                                        .then((response) => {\r\n                                            const result = response.data;\r\n                                            if (result.status === \"success\") {\r\n                                                getAllSlots();\r\n                                            } else {\r\n                                                window.alert(\r\n                                                    \"Problem occured ! Slot \" +\r\n                                                    item.slotTime +\r\n                                                    \" couldnot be deleted !\"\r\n                                                );\r\n                                            }\r\n                                        });\r\n                                }\r\n                            };\r\n                            return (\r\n                                <tr key={index}>\r\n                                  \r\n                                    <td>{item.slotId}</td>\r\n                                    <td>{item.slotTime}</td>\r\n                                    \r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-danger\"\r\n                                            onClick={deleteSlot}>\r\n                                            Delete slot\r\n                                        </button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slots\r\n","import React from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nimport { url } from './../commons/constants';\r\n\r\nfunction AddSlot() {\r\n    const [slotTime, setSlotTime] = useState('');\r\n    const history = useHistory()\r\n    const addSlot = ()=>{\r\n        axios.post(url + '/admin/slot/',{slotTime:slotTime}).then((response =>{\r\n            const result = response.data\r\n            if(result.status ==='success'){\r\n                window.alert('Slot added successfully')\r\n                history.push('/allslots')\r\n            }else{\r\n                window.alert('problem occurred during fetching Slots data')\r\n            }\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-md-6 offset-md-3 mt-5\">\r\n                <h2 align='center'>Add a new Slot</h2>\r\n                <br/>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"slotid\">Enter Slot Time</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"slotid\" placeholder=\"Slot Time (HH : MM)\" required=\"required\" onChange={(e) =>{\r\n                        setSlotTime(e.target.value)\r\n                    }}/>\r\n                </div>\r\n                \r\n                <hr />\r\n                <button type=\"button\" className=\"btn btn-success offset-md-3\" onClick={addSlot}>Add Slot</button>\r\n                <Link to='/allslots'>\r\n                    <button type=\"button\" className=\"btn btn-warning offset-md-2\">Back</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddSlot;\r\n","import React from 'react'\r\nimport { BrowserRouter, Link, Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport Specialities from './../pages/Specialities';\r\nimport Doctors from './../pages/Doctors';\r\nimport Patients from './../pages/Patients';\r\nimport AddSpeciality from './../pages/AddSpeciality';\r\nimport DocSignUp from '../pages/DocSignUp';\r\nimport BloodBank from './../pages/BloodBank';\r\nimport AddBloodBank from './../pages/AddBloodBank';\r\nimport DocSearchResult from '../pages/DocSearchResult';\r\nimport Slots from './../pages/Slots';\r\nimport AddSlot from './../pages/AddSlot';\r\n\r\nfunction Navbar({authorized, setIsAuthorized}) {\r\n    const history = useHistory();\r\n    var logout = () => {\r\n        if(window.confirm('Do you really want to log out ?')){\r\n            localStorage.clear();\r\n            setIsAuthorized(false);\r\n            history.push('/');\r\n        }\r\n    }\r\n    // if( !authorized)\r\n    // return <Redirect to= '/nav'/>\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a class=\"navbar-brand\">Admin | Clinic-on-click</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        \r\n                        <Link to=\"/doctors\">\r\n                            <a class=\"nav-item nav-link\" >Doctors</a>\r\n                        </Link>\r\n                        <Link to=\"/specialities\">\r\n                            <a class=\"nav-item nav-link\" >Specialities</a>\r\n                        </Link>\r\n                        <Link to=\"/patients\">\r\n                            <a class=\"nav-item nav-link\" >Patients</a>\r\n                        </Link>\r\n                        <Link to=\"/bloodbank\">\r\n                            <a class=\"nav-item nav-link\" >BloodBank</a>\r\n                        </Link>\r\n                        <Link to=\"/allslots\">\r\n                            <a class=\"nav-item nav-link\" >Slots</a>\r\n                        </Link>\r\n                        \r\n                            <div class=\"nav-item nav-link\" style={{textAlign:'right'}} role=\"button\" onClick={logout}><button>Logout</button></div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </nav>\r\n         \r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/\"/>\r\n                    </Route> \r\n                    <Route path=\"/doctors\" component={Doctors}/>\r\n                    <Route path=\"/specialities\" component={Specialities}/>\r\n                    <Route path=\"/patients\" component={Patients}/>\r\n                    <Route path=\"/addspeciality\" component={AddSpeciality}/>\r\n                    <Route path=\"/addDoctor\" component={DocSignUp}/>\r\n                    <Route path=\"/bloodbank\" component={BloodBank}/>\r\n                    <Route path=\"/addbloodbank\" component={AddBloodBank}/>\r\n                    <Route path=\"/docsearchresult\" component={DocSearchResult}/>\r\n                    <Route path=\"/allslots\" component={Slots}/>\r\n                    <Route path=\"/addslot\" component={AddSlot}/>\r\n                </Switch>\r\n    \r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './AdminLogin.css'\r\nimport {useState} from 'react'\r\nimport axios from 'axios';\r\nimport { url } from './../commons/constants';\r\nimport { Link, useHistory, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Signin({setIsAuthorized}) {\r\n    let history = useHistory();\r\n    const [emailLogin , setemailLogin ] = useState('')\r\n    const [passwordLogin , setpasswordLogin ] = useState('')\r\n\r\n    axios.defaults.withCredentials = false;  \r\n    const logIn = (e) =>{\r\n        e.preventDefault()\r\n        const data = new FormData();\r\n\r\n        data.append('email', emailLogin);\r\n        data.append('password', passwordLogin);\r\n    try{\r\n        axios.post(url + '/admin/auth' , data).then((response) => {\r\n            const result = response.data;\r\n            console.log(result.data);\r\n            if(result.status === 'success'){\r\n                console.log(result.status);\r\n                console.log(result.data);\r\n                localStorage.setItem(\"admin\",JSON.stringify(response.data));\r\n                setIsAuthorized(true)\r\n                window.alert('Hey! you are Successfully Logged In to Clinic-on-click');\r\n\r\n                history.push('/')\r\n             }else{\r\n                 window.alert('Registeration Failed..');\r\n             }\r\n             \r\n        });\r\n    }catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                \r\n\r\n                    <div className=\"main_display_form\">\r\n                    <hr/><h1 style={{ textAlign: 'center' }}>Clinic-on-click Administration</h1><hr/>\r\n                        <h2 style={{ textAlign: 'center' }}>Admin Login</h2>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your registered email-id' \r\n                                  onChange={(e) => {\r\n                                    setemailLogin(e.target.value)\r\n                                }}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter your password'  \r\n                                onChange={(e) => {\r\n                                    setpasswordLogin(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={logIn}>Log in</button><br/>\r\n                            <Link to='/forgotpassword'>\r\n                                <button type=\"button\" class=\"btn btn-secondary transparent-btn\" >Forgot Password ?</button>\r\n                            </Link>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signin;\r\n","import axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { url } from '../commons/constants';\r\nfunction ForgotPassword() {\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [encOTP, setEncOTP] = useState('');\r\n    const [userOtp, setUserOtp] = useState(0);\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const sendOTP = () => {\r\n        const emailform = new FormData()\r\n        emailform.append('useremail',email)\r\n        const body ={\r\n            \"email\":email\r\n        }\r\n        axios.post(url + '/email/forgot',body).then((response) => {\r\n            if (response.data.status === 'success') {\r\n                setEncOTP(response.data.data)\r\n                setIsOtpSent(true)\r\n            } else {\r\n                // console.log(response.data.data)\r\n                window.alert(\"email not found in record\")\r\n            }\r\n        })\r\n    }\r\n    const verifyOtp = () => {\r\n        const otp = (parseInt(encOTP) + 31) / 31;\r\n        console.log('otp '+otp)\r\n        console.log('userOtp '+userOtp)\r\n        if (userOtp.length !== 4) {\r\n            alert('OTP should be of 4-digits which is sent on your email')\r\n        } if(otp != userOtp){\r\n            console.log('otp '+otp)\r\n            console.log('userOtp '+userOtp)\r\n            alert('Incorrect OTP ! please enter a correct OTP')\r\n        } else if (password.length === 0 && confirmPassword.length === 0) {\r\n            alert('enter a new password')\r\n        } else if (password !== confirmPassword) {\r\n            alert('confirm password not matched..Re-enter the password')\r\n        } else {\r\n            const data = new FormData();\r\n\r\n            data.append('email', email);\r\n            data.append('newPassword', password);\r\n\r\n            axios.post(url + '/email/verifyotp',data).then((response) => {\r\n                if (response.data.status === 'success') {\r\n                    window.alert('Your password is reset ! please use new password to logIn now')\r\n                    history.push('/')\r\n                } else {\r\n                    window.alert('password updatation failed')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n\r\n\r\n                <div className=\"main_display_form\">\r\n                    <hr /><h1 style={{ textAlign: 'center' }}>Forgot password</h1><hr />\r\n\r\n                    {!isOtpSent && (\r\n                        <>\r\n                            <h4 style={{ textAlign: 'center' }}>Please enter your Email-id to reset password</h4>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder='Enter your registered email-id'\r\n                                        onChange={(e) => {\r\n                                            setEmail(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <button class=\"btn btn-success\" onClick={sendOTP}>Send OTP</button><br />\r\n\r\n                        </>\r\n                    )}\r\n                    {isOtpSent && (\r\n                        <>\r\n                            <div className=\"alert alert-success\" role=\"alert\">\r\n                                OTP is successfully sent to your registered Email-Id ! <br />\r\n                                You can now set a new password\r\n                            </div>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" value={email} disabled />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"otp\" className=\"col-sm-2 col-form-label\">OTP: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"otp\" placeholder='Enter the received 4-digit OTP'\r\n                                        onChange={(e) => {\r\n                                            setUserOtp(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder='Enter your password'\r\n                                        onChange={(e) => {\r\n                                            setPassword(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label htmlFor=\"confirmpassword\" className=\"col-sm-2 col-form-label\">Confirm Password: </label>\r\n                                <div class=\"col-sm-10\">\r\n                                    <input type=\"password\" className=\"form-control\" id=\"confirmpassword\" placeholder='confirm your password'\r\n                                        onChange={(e) => {\r\n                                            setConfirmPassword(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                <button class=\"btn btn-success\" onClick={verifyOtp}>Change password</button><br />\r\n\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport AdminLogin from './pages/AdminLogin';\r\nimport { useEffect, useState } from 'react';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\n\r\nfunction App() {\r\n    const [isAuthorized, setIsAuthorized] = useState(false)\r\n  useEffect(()=>{\r\n    if(localStorage.getItem(\"admin\")!=null){\r\n             setIsAuthorized(true);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Router basename=\"/admin\">\r\n        <Switch>\r\n          <div className=\"container\">\r\n          {/* <Route path='/' exact component={()=>{return <AdminLogin setIsAuthorized={setIsAuthorized}/>}} /> */}\r\n          <Route  path='/'  render={()=>{return( isAuthorized? <Navbar authorized={isAuthorized} setIsAuthorized={setIsAuthorized}/>: <AdminLogin setIsAuthorized={setIsAuthorized}/>)}} />\r\n          {/* <Route path='/nav' exact component={()=>{return <Navbar authorized={isAuthorized}/>}} /> */}\r\n          <Route path='/forgotpassword' component={ForgotPassword} />\r\n          </div>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}